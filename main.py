from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from anastruct import SystemElements
from sympy.parsing.sympy_parser import parse_expr
import pickle
import functions
from mohr import mohr_circle
from sigma import sigma
from mplwidget import MplWidget
import matplotlib.pyplot as plt
from matplotlib.pyplot import savefig
import os
from teacher import Teacher
import inspect
import locale
import ctypes
from distutils.spawn import find_executable
import resources
import re
import loadprompt
import sr


class Ui_tenshi(QWidget):

    sig = sigma()
    teach = Teacher()
    ss = SystemElements()
    mohr = mohr_circle()
    undocounter = -1
    solvetrue = False
    last_figure = None

    def setupUi(self, tenshi):
        tenshi.setObjectName("tenshi")
        tenshi.setWindowModality(QtCore.Qt.WindowModal)
        tenshi.resize(824, 742)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 247, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 247, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 247, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 247, 253))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        tenshi.setPalette(palette)
        tenshi.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(tenshi)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.frame_12 = QtWidgets.QFrame(self.centralwidget)
        self.frame_12.setMinimumSize(QtCore.QSize(221, 66))
        self.frame_12.setMaximumSize(QtCore.QSize(16777215, 66))
        self.frame_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_12.setMidLineWidth(1)
        self.frame_12.setObjectName("frame_12")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.frame_12)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.show_structure = QtWidgets.QPushButton(self.frame_12)
        self.show_structure.setMaximumSize(QtCore.QSize(28, 50))
        self.show_structure.setAutoFillBackground(True)
        self.show_structure.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Figures/truss.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_structure.setIcon(icon)
        self.show_structure.setIconSize(QtCore.QSize(30, 30))
        self.show_structure.setObjectName("show_structure")
        self.gridLayout_11.addWidget(self.show_structure, 1, 0, 1, 1)
        self.show_moment = QtWidgets.QPushButton(self.frame_12)
        self.show_moment.setMaximumSize(QtCore.QSize(28, 50))
        self.show_moment.setAutoFillBackground(True)
        self.show_moment.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/Figures/momentfig.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_moment.setIcon(icon1)
        self.show_moment.setIconSize(QtCore.QSize(28, 28))
        self.show_moment.setObjectName("show_moment")
        self.gridLayout_11.addWidget(self.show_moment, 1, 5, 1, 1)
        self.show_displacement = QtWidgets.QPushButton(self.frame_12)
        self.show_displacement.setMaximumSize(QtCore.QSize(28, 50))
        self.show_displacement.setAutoFillBackground(True)
        self.show_displacement.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/Figures/displacement.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_displacement.setIcon(icon2)
        self.show_displacement.setIconSize(QtCore.QSize(30, 30))
        self.show_displacement.setObjectName("show_displacement")
        self.gridLayout_11.addWidget(self.show_displacement, 1, 6, 1, 1)
        self.show_normal = QtWidgets.QPushButton(self.frame_12)
        self.show_normal.setMaximumSize(QtCore.QSize(28, 50))
        self.show_normal.setAutoFillBackground(True)
        self.show_normal.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/Figures/normal.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_normal.setIcon(icon3)
        self.show_normal.setIconSize(QtCore.QSize(45, 50))
        self.show_normal.setObjectName("show_normal")
        self.gridLayout_11.addWidget(self.show_normal, 1, 3, 1, 1)
        self.show_sec = QtWidgets.QPushButton(self.frame_12)
        self.show_sec.setMaximumSize(QtCore.QSize(28, 50))
        self.show_sec.setAutoFillBackground(True)
        self.show_sec.setText("")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/Figures/section.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_sec.setIcon(icon4)
        self.show_sec.setIconSize(QtCore.QSize(30, 25))
        self.show_sec.setObjectName("show_sec")
        self.gridLayout_11.addWidget(self.show_sec, 1, 1, 1, 1)
        self.show_shear = QtWidgets.QPushButton(self.frame_12)
        self.show_shear.setMaximumSize(QtCore.QSize(28, 50))
        self.show_shear.setAutoFillBackground(True)
        self.show_shear.setText("")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/Figures/shearfig.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_shear.setIcon(icon5)
        self.show_shear.setIconSize(QtCore.QSize(30, 31))
        self.show_shear.setObjectName("show_shear")
        self.gridLayout_11.addWidget(self.show_shear, 1, 4, 1, 1)
        self.show_supports = QtWidgets.QPushButton(self.frame_12)
        self.show_supports.setMaximumSize(QtCore.QSize(28, 50))
        self.show_supports.setAutoFillBackground(True)
        self.show_supports.setText("")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/Figures/reaction.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_supports.setIcon(icon6)
        self.show_supports.setIconSize(QtCore.QSize(35, 32))
        self.show_supports.setObjectName("show_supports")
        self.gridLayout_11.addWidget(self.show_supports, 1, 2, 1, 1)
        self.show_mohr = QtWidgets.QPushButton(self.frame_12)
        self.show_mohr.setMaximumSize(QtCore.QSize(28, 50))
        self.show_mohr.setAutoFillBackground(True)
        self.show_mohr.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/Figures/mohrfig.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.show_mohr.setIcon(icon7)
        self.show_mohr.setIconSize(QtCore.QSize(25, 30))
        self.show_mohr.setObjectName("show_mohr")
        self.gridLayout_11.addWidget(self.show_mohr, 1, 7, 1, 1)
        self.label_41 = QtWidgets.QLabel(self.frame_12)
        self.label_41.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_41.setAlignment(QtCore.Qt.AlignCenter)
        self.label_41.setObjectName("label_41")
        self.gridLayout_11.addWidget(self.label_41, 0, 0, 1, 8)
        self.gridLayout_5.addWidget(self.frame_12, 0, 3, 1, 1)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setMinimumSize(QtCore.QSize(221, 541))
        self.stackedWidget.setMaximumSize(QtCore.QSize(221, 16777215))
        self.stackedWidget.setAutoFillBackground(False)
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.stackedWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.stackedWidget.setLineWidth(1)
        self.stackedWidget.setMidLineWidth(1)
        self.stackedWidget.setObjectName("stackedWidget")
        self.pages = QtWidgets.QWidget()
        self.pages.setObjectName("pages")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.pages)
        self.gridLayout_14.setObjectName("gridLayout_14")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_13 = QtWidgets.QLabel(self.pages)
        self.label_13.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_13.setMidLineWidth(0)
        self.label_13.setAlignment(QtCore.Qt.AlignCenter)
        self.label_13.setObjectName("label_13")
        self.verticalLayout.addWidget(self.label_13)
        self.frame_3 = QtWidgets.QFrame(self.pages)
        self.frame_3.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setMidLineWidth(0)
        self.frame_3.setObjectName("frame_3")
        self.gridLayout = QtWidgets.QGridLayout(self.frame_3)
        self.gridLayout.setObjectName("gridLayout")
        self.beam_y2 = QtWidgets.QLineEdit(self.frame_3)
        self.beam_y2.setObjectName("beam_y2")
        self.gridLayout.addWidget(self.beam_y2, 5, 1, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.frame_3)
        self.label_7.setFrameShape(QtWidgets.QFrame.Box)
        self.label_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 1, 0, 1, 2)
        self.beam_y1 = QtWidgets.QLineEdit(self.frame_3)
        self.beam_y1.setObjectName("beam_y1")
        self.gridLayout.addWidget(self.beam_y1, 3, 1, 1, 1)
        self.beam_x2 = QtWidgets.QLineEdit(self.frame_3)
        self.beam_x2.setObjectName("beam_x2")
        self.gridLayout.addWidget(self.beam_x2, 4, 1, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.frame_3)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 5, 0, 1, 1)
        self.beam_x1 = QtWidgets.QLineEdit(self.frame_3)
        self.beam_x1.setObjectName("beam_x1")
        self.gridLayout.addWidget(self.beam_x1, 2, 1, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.frame_3)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 4, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.frame_3)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 2, 0, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.frame_3)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 3, 0, 1, 1)
        self.frame_19 = QtWidgets.QFrame(self.frame_3)
        self.frame_19.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_19.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_19.setObjectName("frame_19")
        self.gridLayout_30 = QtWidgets.QGridLayout(self.frame_19)
        self.gridLayout_30.setObjectName("gridLayout_30")
        self.beam_list = QtWidgets.QComboBox(self.frame_19)
        self.beam_list.setEditable(True)
        self.beam_list.setObjectName("beam_list")
        self.beam_list.addItem("")
        self.gridLayout_30.addWidget(self.beam_list, 0, 0, 1, 1)
        self.beam_plus = QtWidgets.QPushButton(self.frame_19)
        self.beam_plus.setMaximumSize(QtCore.QSize(30, 16777215))
        self.beam_plus.setObjectName("beam_plus")
        self.gridLayout_30.addWidget(self.beam_plus, 0, 1, 1, 1)
        self.gridLayout.addWidget(self.frame_19, 0, 0, 1, 2)
        self.verticalLayout.addWidget(self.frame_3)
        self.utilizeinfo = QtWidgets.QCheckBox(self.pages)
        self.utilizeinfo.setObjectName("utilizeinfo")
        self.verticalLayout.addWidget(self.utilizeinfo)
        self.frame_4 = QtWidgets.QFrame(self.pages)
        self.frame_4.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setMidLineWidth(0)
        self.frame_4.setObjectName("frame_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.frame_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.label_10 = QtWidgets.QLabel(self.frame_4)
        self.label_10.setWordWrap(True)
        self.label_10.setObjectName("label_10")
        self.gridLayout_4.addWidget(self.label_10, 4, 0, 1, 1)
        self.beam_A = QtWidgets.QLineEdit(self.frame_4)
        self.beam_A.setObjectName("beam_A")
        self.gridLayout_4.addWidget(self.beam_A, 5, 1, 1, 1)
        self.beam_E = QtWidgets.QLineEdit(self.frame_4)
        self.beam_E.setObjectName("beam_E")
        self.gridLayout_4.addWidget(self.beam_E, 3, 1, 1, 1)
        self.label_14 = QtWidgets.QLabel(self.frame_4)
        self.label_14.setWordWrap(True)
        self.label_14.setObjectName("label_14")
        self.gridLayout_4.addWidget(self.label_14, 2, 0, 1, 1)
        self.beam_I = QtWidgets.QLineEdit(self.frame_4)
        self.beam_I.setObjectName("beam_I")
        self.gridLayout_4.addWidget(self.beam_I, 4, 1, 1, 1)
        self.label_9 = QtWidgets.QLabel(self.frame_4)
        self.label_9.setWordWrap(True)
        self.label_9.setObjectName("label_9")
        self.gridLayout_4.addWidget(self.label_9, 3, 0, 1, 1)
        self.elementtype = QtWidgets.QComboBox(self.frame_4)
        self.elementtype.setObjectName("elementtype")
        self.elementtype.addItem("")
        self.elementtype.addItem("")
        self.gridLayout_4.addWidget(self.elementtype, 2, 1, 1, 1)
        self.label_11 = QtWidgets.QLabel(self.frame_4)
        self.label_11.setWordWrap(True)
        self.label_11.setObjectName("label_11")
        self.gridLayout_4.addWidget(self.label_11, 5, 0, 1, 1)
        self.label_8 = QtWidgets.QLabel(self.frame_4)
        self.label_8.setFrameShape(QtWidgets.QFrame.Box)
        self.label_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_4.addWidget(self.label_8, 0, 0, 1, 2)
        self.verticalLayout.addWidget(self.frame_4)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.beam_apply = QtWidgets.QPushButton(self.pages)
        self.beam_apply.setObjectName("beam_apply")
        self.horizontalLayout.addWidget(self.beam_apply)
        self.beam_remove = QtWidgets.QPushButton(self.pages)
        self.beam_remove.setObjectName("beam_remove")
        self.horizontalLayout.addWidget(self.beam_remove)
        self.verticalLayout.addLayout(self.horizontalLayout)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.gridLayout_14.addLayout(self.verticalLayout, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.pages)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.page_2)
        self.gridLayout_17.setObjectName("gridLayout_17")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.label_42 = QtWidgets.QLabel(self.page_2)
        self.label_42.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_42.setAlignment(QtCore.Qt.AlignCenter)
        self.label_42.setObjectName("label_42")
        self.verticalLayout_8.addWidget(self.label_42)
        self.frame_21 = QtWidgets.QFrame(self.page_2)
        self.frame_21.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_21.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_21.setObjectName("frame_21")
        self.gridLayout_32 = QtWidgets.QGridLayout(self.frame_21)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.node_list = QtWidgets.QComboBox(self.frame_21)
        self.node_list.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.node_list.setEditable(True)
        self.node_list.setObjectName("node_list")
        self.node_list.addItem("")
        self.gridLayout_32.addWidget(self.node_list, 0, 0, 1, 1)
        self.node_plus = QtWidgets.QPushButton(self.frame_21)
        self.node_plus.setMaximumSize(QtCore.QSize(30, 16777215))
        self.node_plus.setObjectName("node_plus")
        self.gridLayout_32.addWidget(self.node_plus, 0, 1, 1, 1)
        self.verticalLayout_8.addWidget(self.frame_21)
        self.frame_8 = QtWidgets.QFrame(self.page_2)
        self.frame_8.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setMidLineWidth(0)
        self.frame_8.setObjectName("frame_8")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.frame_8)
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.label_29 = QtWidgets.QLabel(self.frame_8)
        self.label_29.setFrameShape(QtWidgets.QFrame.Box)
        self.label_29.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_29.setAlignment(QtCore.Qt.AlignCenter)
        self.label_29.setObjectName("label_29")
        self.gridLayout_8.addWidget(self.label_29, 0, 0, 1, 2)
        self.label_31 = QtWidgets.QLabel(self.frame_8)
        self.label_31.setObjectName("label_31")
        self.gridLayout_8.addWidget(self.label_31, 2, 0, 1, 1)
        self.node_x = QtWidgets.QLineEdit(self.frame_8)
        self.node_x.setObjectName("node_x")
        self.gridLayout_8.addWidget(self.node_x, 1, 1, 1, 1)
        self.label_30 = QtWidgets.QLabel(self.frame_8)
        self.label_30.setObjectName("label_30")
        self.gridLayout_8.addWidget(self.label_30, 1, 0, 1, 1)
        self.node_y = QtWidgets.QLineEdit(self.frame_8)
        self.node_y.setObjectName("node_y")
        self.gridLayout_8.addWidget(self.node_y, 2, 1, 1, 1)
        self.verticalLayout_8.addWidget(self.frame_8)
        self.frame_13 = QtWidgets.QFrame(self.page_2)
        self.frame_13.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_13.setObjectName("frame_13")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.frame_13)
        self.gridLayout_16.setObjectName("gridLayout_16")
        self.label_17 = QtWidgets.QLabel(self.frame_13)
        self.label_17.setFrameShape(QtWidgets.QFrame.Box)
        self.label_17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.gridLayout_16.addWidget(self.label_17, 0, 0, 1, 2)
        self.label_43 = QtWidgets.QLabel(self.frame_13)
        self.label_43.setObjectName("label_43")
        self.gridLayout_16.addWidget(self.label_43, 1, 0, 1, 1)
        self.node_id = QtWidgets.QLineEdit(self.frame_13)
        self.node_id.setObjectName("node_id")
        self.gridLayout_16.addWidget(self.node_id, 1, 1, 1, 1)
        self.verticalLayout_8.addWidget(self.frame_13)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.node_apply = QtWidgets.QPushButton(self.page_2)
        self.node_apply.setObjectName("node_apply")
        self.horizontalLayout_3.addWidget(self.node_apply)
        self.node_remove = QtWidgets.QPushButton(self.page_2)
        self.node_remove.setObjectName("node_remove")
        self.horizontalLayout_3.addWidget(self.node_remove)
        self.verticalLayout_8.addLayout(self.horizontalLayout_3)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_8.addItem(spacerItem1)
        self.gridLayout_17.addLayout(self.verticalLayout_8, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_2)
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.page)
        self.gridLayout_18.setObjectName("gridLayout_18")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_25 = QtWidgets.QLabel(self.page)
        self.label_25.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_25.setAlignment(QtCore.Qt.AlignCenter)
        self.label_25.setObjectName("label_25")
        self.verticalLayout_3.addWidget(self.label_25)
        self.frame_22 = QtWidgets.QFrame(self.page)
        self.frame_22.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_22.setObjectName("frame_22")
        self.gridLayout_33 = QtWidgets.QGridLayout(self.frame_22)
        self.gridLayout_33.setObjectName("gridLayout_33")
        self.support_list = QtWidgets.QComboBox(self.frame_22)
        self.support_list.setEditable(True)
        self.support_list.setObjectName("support_list")
        self.support_list.addItem("")
        self.gridLayout_33.addWidget(self.support_list, 0, 0, 1, 1)
        self.support_plus = QtWidgets.QPushButton(self.frame_22)
        self.support_plus.setMaximumSize(QtCore.QSize(30, 16777215))
        self.support_plus.setObjectName("support_plus")
        self.gridLayout_33.addWidget(self.support_plus, 0, 1, 1, 1)
        self.verticalLayout_3.addWidget(self.frame_22)
        self.frame_7 = QtWidgets.QFrame(self.page)
        self.frame_7.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setMidLineWidth(0)
        self.frame_7.setObjectName("frame_7")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.frame_7)
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.gridLayout_31 = QtWidgets.QGridLayout()
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.support_roll = QtWidgets.QRadioButton(self.frame_7)
        self.support_roll.setObjectName("support_roll")
        self.gridLayout_31.addWidget(self.support_roll, 0, 0, 1, 1)
        self.support_hinged = QtWidgets.QRadioButton(self.frame_7)
        self.support_hinged.setObjectName("support_hinged")
        self.gridLayout_31.addWidget(self.support_hinged, 0, 1, 1, 1)
        self.support_fixed = QtWidgets.QRadioButton(self.frame_7)
        self.support_fixed.setObjectName("support_fixed")
        self.gridLayout_31.addWidget(self.support_fixed, 1, 0, 1, 1)
        self.support_spring = QtWidgets.QRadioButton(self.frame_7)
        self.support_spring.setObjectName("support_spring")
        self.gridLayout_31.addWidget(self.support_spring, 1, 1, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_31, 1, 0, 1, 3)
        self.support_angle = QtWidgets.QLineEdit(self.frame_7)
        self.support_angle.setObjectName("support_angle")
        self.gridLayout_7.addWidget(self.support_angle, 3, 1, 1, 2)
        self.label_71 = QtWidgets.QLabel(self.frame_7)
        self.label_71.setAlignment(QtCore.Qt.AlignCenter)
        self.label_71.setObjectName("label_71")
        self.gridLayout_7.addWidget(self.label_71, 4, 0, 1, 1)
        self.label_26 = QtWidgets.QLabel(self.frame_7)
        self.label_26.setAlignment(QtCore.Qt.AlignCenter)
        self.label_26.setObjectName("label_26")
        self.gridLayout_7.addWidget(self.label_26, 2, 0, 1, 1)
        self.label_27 = QtWidgets.QLabel(self.frame_7)
        self.label_27.setAlignment(QtCore.Qt.AlignCenter)
        self.label_27.setObjectName("label_27")
        self.gridLayout_7.addWidget(self.label_27, 3, 0, 1, 1)
        self.support_pos = QtWidgets.QLineEdit(self.frame_7)
        self.support_pos.setObjectName("support_pos")
        self.gridLayout_7.addWidget(self.support_pos, 2, 1, 1, 2)
        self.label_73 = QtWidgets.QLabel(self.frame_7)
        self.label_73.setAlignment(QtCore.Qt.AlignCenter)
        self.label_73.setObjectName("label_73")
        self.gridLayout_7.addWidget(self.label_73, 5, 0, 1, 1)
        self.spring_translation = QtWidgets.QLineEdit(self.frame_7)
        self.spring_translation.setObjectName("spring_translation")
        self.gridLayout_7.addWidget(self.spring_translation, 4, 1, 1, 2)
        self.spring_k = QtWidgets.QLineEdit(self.frame_7)
        self.spring_k.setObjectName("spring_k")
        self.gridLayout_7.addWidget(self.spring_k, 5, 1, 1, 2)
        self.verticalLayout_3.addWidget(self.frame_7)
        self.splitter_2 = QtWidgets.QSplitter(self.page)
        self.splitter_2.setMaximumSize(QtCore.QSize(16777215, 25))
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.support_apply = QtWidgets.QPushButton(self.splitter_2)
        self.support_apply.setMaximumSize(QtCore.QSize(16777215, 25))
        self.support_apply.setObjectName("support_apply")
        self.support_remove = QtWidgets.QPushButton(self.splitter_2)
        self.support_remove.setMaximumSize(QtCore.QSize(16777215, 25))
        self.support_remove.setObjectName("support_remove")
        self.verticalLayout_3.addWidget(self.splitter_2)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem2)
        self.gridLayout_18.addLayout(self.verticalLayout_3, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.page_4)
        self.gridLayout_19.setObjectName("gridLayout_19")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_28 = QtWidgets.QLabel(self.page_4)
        self.label_28.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_28.setAlignment(QtCore.Qt.AlignCenter)
        self.label_28.setObjectName("label_28")
        self.verticalLayout_4.addWidget(self.label_28)
        self.frame_23 = QtWidgets.QFrame(self.page_4)
        self.frame_23.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_23.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_23.setObjectName("frame_23")
        self.gridLayout_34 = QtWidgets.QGridLayout(self.frame_23)
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.load_list = QtWidgets.QComboBox(self.frame_23)
        self.load_list.setEditable(True)
        self.load_list.setObjectName("load_list")
        self.load_list.addItem("")
        self.gridLayout_34.addWidget(self.load_list, 0, 0, 1, 1)
        self.load_plus = QtWidgets.QPushButton(self.frame_23)
        self.load_plus.setMaximumSize(QtCore.QSize(30, 16777215))
        self.load_plus.setObjectName("load_plus")
        self.gridLayout_34.addWidget(self.load_plus, 0, 1, 1, 1)
        self.verticalLayout_4.addWidget(self.frame_23)
        self.frame_9 = QtWidgets.QFrame(self.page_4)
        self.frame_9.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.frame_9)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.load_angle = QtWidgets.QLineEdit(self.frame_9)
        self.load_angle.setObjectName("load_angle")
        self.gridLayout_9.addWidget(self.load_angle, 3, 1, 1, 1)
        self.load_pos = QtWidgets.QLineEdit(self.frame_9)
        self.load_pos.setObjectName("load_pos")
        self.gridLayout_9.addWidget(self.load_pos, 0, 1, 1, 1)
        self.load_y = QtWidgets.QLineEdit(self.frame_9)
        self.load_y.setObjectName("load_y")
        self.gridLayout_9.addWidget(self.load_y, 1, 1, 1, 1)
        self.label_32 = QtWidgets.QLabel(self.frame_9)
        self.label_32.setObjectName("label_32")
        self.gridLayout_9.addWidget(self.label_32, 1, 0, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.frame_9)
        self.label_33.setObjectName("label_33")
        self.gridLayout_9.addWidget(self.label_33, 2, 0, 1, 1)
        self.load_x = QtWidgets.QLineEdit(self.frame_9)
        self.load_x.setObjectName("load_x")
        self.gridLayout_9.addWidget(self.load_x, 2, 1, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.frame_9)
        self.label_36.setObjectName("label_36")
        self.gridLayout_9.addWidget(self.label_36, 0, 0, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.frame_9)
        self.label_34.setObjectName("label_34")
        self.gridLayout_9.addWidget(self.label_34, 3, 0, 1, 1)
        self.label_35 = QtWidgets.QLabel(self.frame_9)
        self.label_35.setObjectName("label_35")
        self.gridLayout_9.addWidget(self.label_35, 4, 0, 1, 1)
        self.load_moment = QtWidgets.QLineEdit(self.frame_9)
        self.load_moment.setObjectName("load_moment")
        self.gridLayout_9.addWidget(self.load_moment, 4, 1, 1, 1)
        self.verticalLayout_4.addWidget(self.frame_9)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.load_apply = QtWidgets.QPushButton(self.page_4)
        self.load_apply.setObjectName("load_apply")
        self.horizontalLayout_4.addWidget(self.load_apply)
        self.load_remove = QtWidgets.QPushButton(self.page_4)
        self.load_remove.setObjectName("load_remove")
        self.horizontalLayout_4.addWidget(self.load_remove)
        self.verticalLayout_4.addLayout(self.horizontalLayout_4)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem3)
        self.gridLayout_19.addLayout(self.verticalLayout_4, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_4)
        self.page_5 = QtWidgets.QWidget()
        self.page_5.setObjectName("page_5")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.page_5)
        self.gridLayout_20.setObjectName("gridLayout_20")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_37 = QtWidgets.QLabel(self.page_5)
        self.label_37.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_37.setAlignment(QtCore.Qt.AlignCenter)
        self.label_37.setObjectName("label_37")
        self.verticalLayout_5.addWidget(self.label_37)
        self.frame_24 = QtWidgets.QFrame(self.page_5)
        self.frame_24.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_24.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_24.setObjectName("frame_24")
        self.gridLayout_35 = QtWidgets.QGridLayout(self.frame_24)
        self.gridLayout_35.setObjectName("gridLayout_35")
        self.qload_list = QtWidgets.QComboBox(self.frame_24)
        self.qload_list.setEditable(True)
        self.qload_list.setObjectName("qload_list")
        self.qload_list.addItem("")
        self.gridLayout_35.addWidget(self.qload_list, 0, 0, 1, 1)
        self.qload_plus = QtWidgets.QPushButton(self.frame_24)
        self.qload_plus.setMaximumSize(QtCore.QSize(30, 16777215))
        self.qload_plus.setObjectName("qload_plus")
        self.gridLayout_35.addWidget(self.qload_plus, 0, 1, 1, 1)
        self.verticalLayout_5.addWidget(self.frame_24)
        self.frame_10 = QtWidgets.QFrame(self.page_5)
        self.frame_10.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_10.setObjectName("frame_10")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.frame_10)
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.label_38 = QtWidgets.QLabel(self.frame_10)
        self.label_38.setObjectName("label_38")
        self.gridLayout_10.addWidget(self.label_38, 0, 0, 1, 1)
        self.qload_pos = QtWidgets.QLineEdit(self.frame_10)
        self.qload_pos.setObjectName("qload_pos")
        self.gridLayout_10.addWidget(self.qload_pos, 0, 1, 1, 1)
        self.label_39 = QtWidgets.QLabel(self.frame_10)
        self.label_39.setObjectName("label_39")
        self.gridLayout_10.addWidget(self.label_39, 1, 0, 1, 1)
        self.qload_initial = QtWidgets.QLineEdit(self.frame_10)
        self.qload_initial.setObjectName("qload_initial")
        self.gridLayout_10.addWidget(self.qload_initial, 1, 1, 1, 1)
        self.label_40 = QtWidgets.QLabel(self.frame_10)
        self.label_40.setObjectName("label_40")
        self.gridLayout_10.addWidget(self.label_40, 2, 0, 1, 1)
        self.qload_final = QtWidgets.QLineEdit(self.frame_10)
        self.qload_final.setObjectName("qload_final")
        self.gridLayout_10.addWidget(self.qload_final, 2, 1, 1, 1)
        self.verticalLayout_5.addWidget(self.frame_10)
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.qload_apply = QtWidgets.QPushButton(self.page_5)
        self.qload_apply.setObjectName("qload_apply")
        self.horizontalLayout_5.addWidget(self.qload_apply)
        self.qload_remove = QtWidgets.QPushButton(self.page_5)
        self.qload_remove.setObjectName("qload_remove")
        self.horizontalLayout_5.addWidget(self.qload_remove)
        self.verticalLayout_5.addLayout(self.horizontalLayout_5)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem4)
        self.gridLayout_20.addLayout(self.verticalLayout_5, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_5)
        self.page_6 = QtWidgets.QWidget()
        self.page_6.setObjectName("page_6")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.page_6)
        self.gridLayout_22.setObjectName("gridLayout_22")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label_44 = QtWidgets.QLabel(self.page_6)
        self.label_44.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_44.setAlignment(QtCore.Qt.AlignCenter)
        self.label_44.setObjectName("label_44")
        self.verticalLayout_6.addWidget(self.label_44)
        self.frame_25 = QtWidgets.QFrame(self.page_6)
        self.frame_25.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_25.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_25.setObjectName("frame_25")
        self.gridLayout_36 = QtWidgets.QGridLayout(self.frame_25)
        self.gridLayout_36.setObjectName("gridLayout_36")
        self.rect_list = QtWidgets.QComboBox(self.frame_25)
        self.rect_list.setEditable(True)
        self.rect_list.setObjectName("rect_list")
        self.rect_list.addItem("")
        self.gridLayout_36.addWidget(self.rect_list, 0, 0, 1, 1)
        self.rect_plus = QtWidgets.QPushButton(self.frame_25)
        self.rect_plus.setMaximumSize(QtCore.QSize(30, 16777215))
        self.rect_plus.setObjectName("rect_plus")
        self.gridLayout_36.addWidget(self.rect_plus, 0, 1, 1, 1)
        self.verticalLayout_6.addWidget(self.frame_25)
        self.rect_visualize = QtWidgets.QCheckBox(self.page_6)
        self.rect_visualize.setObjectName("rect_visualize")
        self.verticalLayout_6.addWidget(self.rect_visualize)
        self.frame_14 = QtWidgets.QFrame(self.page_6)
        self.frame_14.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.frame_14)
        self.gridLayout_21.setObjectName("gridLayout_21")
        self.label_49 = QtWidgets.QLabel(self.frame_14)
        self.label_49.setFrameShape(QtWidgets.QFrame.Box)
        self.label_49.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_49.setAlignment(QtCore.Qt.AlignCenter)
        self.label_49.setObjectName("label_49")
        self.gridLayout_21.addWidget(self.label_49, 0, 0, 1, 2)
        self.label_50 = QtWidgets.QLabel(self.frame_14)
        self.label_50.setFrameShape(QtWidgets.QFrame.Box)
        self.label_50.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_50.setAlignment(QtCore.Qt.AlignCenter)
        self.label_50.setObjectName("label_50")
        self.gridLayout_21.addWidget(self.label_50, 1, 0, 1, 2)
        self.label_45 = QtWidgets.QLabel(self.frame_14)
        self.label_45.setObjectName("label_45")
        self.gridLayout_21.addWidget(self.label_45, 2, 0, 1, 1)
        self.rect_x1 = QtWidgets.QLineEdit(self.frame_14)
        self.rect_x1.setObjectName("rect_x1")
        self.gridLayout_21.addWidget(self.rect_x1, 2, 1, 1, 1)
        self.label_46 = QtWidgets.QLabel(self.frame_14)
        self.label_46.setObjectName("label_46")
        self.gridLayout_21.addWidget(self.label_46, 3, 0, 1, 1)
        self.rect_y1 = QtWidgets.QLineEdit(self.frame_14)
        self.rect_y1.setObjectName("rect_y1")
        self.gridLayout_21.addWidget(self.rect_y1, 3, 1, 1, 1)
        self.label_51 = QtWidgets.QLabel(self.frame_14)
        self.label_51.setFrameShape(QtWidgets.QFrame.Box)
        self.label_51.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_51.setAlignment(QtCore.Qt.AlignCenter)
        self.label_51.setObjectName("label_51")
        self.gridLayout_21.addWidget(self.label_51, 4, 0, 1, 2)
        self.label_47 = QtWidgets.QLabel(self.frame_14)
        self.label_47.setObjectName("label_47")
        self.gridLayout_21.addWidget(self.label_47, 5, 0, 1, 1)
        self.rect_x2 = QtWidgets.QLineEdit(self.frame_14)
        self.rect_x2.setObjectName("rect_x2")
        self.gridLayout_21.addWidget(self.rect_x2, 5, 1, 1, 1)
        self.label_48 = QtWidgets.QLabel(self.frame_14)
        self.label_48.setObjectName("label_48")
        self.gridLayout_21.addWidget(self.label_48, 6, 0, 1, 1)
        self.rect_y2 = QtWidgets.QLineEdit(self.frame_14)
        self.rect_y2.setObjectName("rect_y2")
        self.gridLayout_21.addWidget(self.rect_y2, 6, 1, 1, 1)
        self.verticalLayout_6.addWidget(self.frame_14)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.rect_apply = QtWidgets.QPushButton(self.page_6)
        self.rect_apply.setObjectName("rect_apply")
        self.horizontalLayout_6.addWidget(self.rect_apply)
        self.rect_remove = QtWidgets.QPushButton(self.page_6)
        self.rect_remove.setObjectName("rect_remove")
        self.horizontalLayout_6.addWidget(self.rect_remove)
        self.verticalLayout_6.addLayout(self.horizontalLayout_6)
        spacerItem5 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem5)
        self.gridLayout_22.addLayout(self.verticalLayout_6, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_6)
        self.page_7 = QtWidgets.QWidget()
        self.page_7.setObjectName("page_7")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.page_7)
        self.gridLayout_24.setObjectName("gridLayout_24")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_52 = QtWidgets.QLabel(self.page_7)
        self.label_52.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_52.setAlignment(QtCore.Qt.AlignCenter)
        self.label_52.setObjectName("label_52")
        self.verticalLayout_7.addWidget(self.label_52)
        self.frame_26 = QtWidgets.QFrame(self.page_7)
        self.frame_26.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_26.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_26.setObjectName("frame_26")
        self.gridLayout_37 = QtWidgets.QGridLayout(self.frame_26)
        self.gridLayout_37.setObjectName("gridLayout_37")
        self.circle_list = QtWidgets.QComboBox(self.frame_26)
        self.circle_list.setEditable(True)
        self.circle_list.setObjectName("circle_list")
        self.circle_list.addItem("")
        self.gridLayout_37.addWidget(self.circle_list, 0, 0, 1, 1)
        self.circle_plus = QtWidgets.QPushButton(self.frame_26)
        self.circle_plus.setMaximumSize(QtCore.QSize(30, 16777215))
        self.circle_plus.setObjectName("circle_plus")
        self.gridLayout_37.addWidget(self.circle_plus, 0, 1, 1, 1)
        self.verticalLayout_7.addWidget(self.frame_26)
        self.circle_visualize = QtWidgets.QCheckBox(self.page_7)
        self.circle_visualize.setObjectName("circle_visualize")
        self.verticalLayout_7.addWidget(self.circle_visualize)
        self.frame_15 = QtWidgets.QFrame(self.page_7)
        self.frame_15.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_15.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_15.setObjectName("frame_15")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.frame_15)
        self.gridLayout_23.setObjectName("gridLayout_23")
        self.label_53 = QtWidgets.QLabel(self.frame_15)
        self.label_53.setFrameShape(QtWidgets.QFrame.Box)
        self.label_53.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_53.setAlignment(QtCore.Qt.AlignCenter)
        self.label_53.setObjectName("label_53")
        self.gridLayout_23.addWidget(self.label_53, 0, 0, 1, 2)
        self.label_54 = QtWidgets.QLabel(self.frame_15)
        self.label_54.setObjectName("label_54")
        self.gridLayout_23.addWidget(self.label_54, 1, 0, 1, 1)
        self.circle_x = QtWidgets.QLineEdit(self.frame_15)
        self.circle_x.setObjectName("circle_x")
        self.gridLayout_23.addWidget(self.circle_x, 1, 1, 1, 1)
        self.label_55 = QtWidgets.QLabel(self.frame_15)
        self.label_55.setObjectName("label_55")
        self.gridLayout_23.addWidget(self.label_55, 2, 0, 1, 1)
        self.circle_y = QtWidgets.QLineEdit(self.frame_15)
        self.circle_y.setObjectName("circle_y")
        self.gridLayout_23.addWidget(self.circle_y, 2, 1, 1, 1)
        self.label_56 = QtWidgets.QLabel(self.frame_15)
        self.label_56.setObjectName("label_56")
        self.gridLayout_23.addWidget(self.label_56, 3, 0, 1, 1)
        self.circle_r = QtWidgets.QLineEdit(self.frame_15)
        self.circle_r.setObjectName("circle_r")
        self.gridLayout_23.addWidget(self.circle_r, 3, 1, 1, 1)
        self.label_57 = QtWidgets.QLabel(self.frame_15)
        self.label_57.setObjectName("label_57")
        self.gridLayout_23.addWidget(self.label_57, 4, 0, 1, 1)
        self.circle_ai = QtWidgets.QLineEdit(self.frame_15)
        self.circle_ai.setObjectName("circle_ai")
        self.gridLayout_23.addWidget(self.circle_ai, 4, 1, 1, 1)
        self.label_58 = QtWidgets.QLabel(self.frame_15)
        self.label_58.setObjectName("label_58")
        self.gridLayout_23.addWidget(self.label_58, 5, 0, 1, 1)
        self.circle_af = QtWidgets.QLineEdit(self.frame_15)
        self.circle_af.setObjectName("circle_af")
        self.gridLayout_23.addWidget(self.circle_af, 5, 1, 1, 1)
        self.verticalLayout_7.addWidget(self.frame_15)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.circle_apply = QtWidgets.QPushButton(self.page_7)
        self.circle_apply.setObjectName("circle_apply")
        self.horizontalLayout_7.addWidget(self.circle_apply)
        self.circle_remove = QtWidgets.QPushButton(self.page_7)
        self.circle_remove.setObjectName("circle_remove")
        self.horizontalLayout_7.addWidget(self.circle_remove)
        self.verticalLayout_7.addLayout(self.horizontalLayout_7)
        spacerItem6 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_7.addItem(spacerItem6)
        self.gridLayout_24.addLayout(self.verticalLayout_7, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_7)
        self.page_8 = QtWidgets.QWidget()
        self.page_8.setObjectName("page_8")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.page_8)
        self.gridLayout_29.setObjectName("gridLayout_29")
        self.scrollArea = QtWidgets.QScrollArea(self.page_8)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 193, 712))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout_28 = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout_28.setObjectName("gridLayout_28")
        self.frame_18 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frame_18.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_18.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_18.setObjectName("frame_18")
        self.gridLayout_27 = QtWidgets.QGridLayout(self.frame_18)
        self.gridLayout_27.setObjectName("gridLayout_27")
        self.label_74 = QtWidgets.QLabel(self.frame_18)
        self.label_74.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_74.setAlignment(QtCore.Qt.AlignCenter)
        self.label_74.setWordWrap(True)
        self.label_74.setObjectName("label_74")
        self.gridLayout_27.addWidget(self.label_74, 0, 0, 1, 3)
        self.tcontact = QtWidgets.QLineEdit(self.frame_18)
        self.tcontact.setObjectName("tcontact")
        self.gridLayout_27.addWidget(self.tcontact, 2, 1, 1, 2)
        self.twidth = QtWidgets.QLineEdit(self.frame_18)
        self.twidth.setObjectName("twidth")
        self.gridLayout_27.addWidget(self.twidth, 3, 1, 1, 2)
        self.tfosbox = QtWidgets.QComboBox(self.frame_18)
        self.tfosbox.setObjectName("tfosbox")
        self.tfosbox.addItem("")
        self.tfosbox.addItem("")
        self.gridLayout_27.addWidget(self.tfosbox, 4, 0, 1, 1)
        self.label_75 = QtWidgets.QLabel(self.frame_18)
        self.label_75.setAlignment(QtCore.Qt.AlignCenter)
        self.label_75.setWordWrap(True)
        self.label_75.setObjectName("label_75")
        self.gridLayout_27.addWidget(self.label_75, 1, 0, 1, 1)
        self.label_80 = QtWidgets.QLabel(self.frame_18)
        self.label_80.setAlignment(QtCore.Qt.AlignCenter)
        self.label_80.setWordWrap(True)
        self.label_80.setObjectName("label_80")
        self.gridLayout_27.addWidget(self.label_80, 6, 0, 1, 1)
        self.tfos = QtWidgets.QLineEdit(self.frame_18)
        self.tfos.setObjectName("tfos")
        self.gridLayout_27.addWidget(self.tfos, 4, 1, 1, 2)
        self.tshear = QtWidgets.QLineEdit(self.frame_18)
        self.tshear.setObjectName("tshear")
        self.gridLayout_27.addWidget(self.tshear, 1, 1, 1, 2)
        self.label_78 = QtWidgets.QLabel(self.frame_18)
        self.label_78.setAlignment(QtCore.Qt.AlignCenter)
        self.label_78.setWordWrap(True)
        self.label_78.setObjectName("label_78")
        self.gridLayout_27.addWidget(self.label_78, 5, 0, 1, 1)
        self.label_77 = QtWidgets.QLabel(self.frame_18)
        self.label_77.setAlignment(QtCore.Qt.AlignCenter)
        self.label_77.setWordWrap(True)
        self.label_77.setObjectName("label_77")
        self.gridLayout_27.addWidget(self.label_77, 3, 0, 1, 1)
        self.label_76 = QtWidgets.QLabel(self.frame_18)
        self.label_76.setAlignment(QtCore.Qt.AlignCenter)
        self.label_76.setWordWrap(True)
        self.label_76.setObjectName("label_76")
        self.gridLayout_27.addWidget(self.label_76, 2, 0, 1, 1)
        self.tscalculate = QtWidgets.QPushButton(self.frame_18)
        self.tscalculate.setObjectName("tscalculate")
        self.gridLayout_27.addWidget(self.tscalculate, 7, 0, 1, 3)
        self.tsresult = QtWidgets.QLabel(self.frame_18)
        self.tsresult.setText("")
        self.tsresult.setWordWrap(True)
        self.tsresult.setObjectName("tsresult")
        self.gridLayout_27.addWidget(self.tsresult, 5, 1, 1, 2)
        self.tfresult = QtWidgets.QLabel(self.frame_18)
        self.tfresult.setText("")
        self.tfresult.setWordWrap(True)
        self.tfresult.setObjectName("tfresult")
        self.gridLayout_27.addWidget(self.tfresult, 6, 1, 1, 2)
        self.gridLayout_28.addWidget(self.frame_18, 2, 0, 1, 1)
        self.frame_17 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frame_17.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_17.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_17.setObjectName("frame_17")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.frame_17)
        self.gridLayout_26.setObjectName("gridLayout_26")
        self.label_70 = QtWidgets.QLabel(self.frame_17)
        self.label_70.setObjectName("label_70")
        self.gridLayout_26.addWidget(self.label_70, 4, 0, 1, 1)
        self.tnormal = QtWidgets.QLineEdit(self.frame_17)
        self.tnormal.setObjectName("tnormal")
        self.gridLayout_26.addWidget(self.tnormal, 1, 1, 1, 1)
        self.tnresult = QtWidgets.QLabel(self.frame_17)
        self.tnresult.setText("")
        self.tnresult.setWordWrap(True)
        self.tnresult.setObjectName("tnresult")
        self.gridLayout_26.addWidget(self.tnresult, 4, 1, 1, 1)
        self.tncalculate = QtWidgets.QPushButton(self.frame_17)
        self.tncalculate.setObjectName("tncalculate")
        self.gridLayout_26.addWidget(self.tncalculate, 6, 0, 1, 2)
        self.tmy = QtWidgets.QLineEdit(self.frame_17)
        self.tmy.setObjectName("tmy")
        self.gridLayout_26.addWidget(self.tmy, 2, 1, 1, 1)
        self.label_67 = QtWidgets.QLabel(self.frame_17)
        self.label_67.setObjectName("label_67")
        self.gridLayout_26.addWidget(self.label_67, 1, 0, 1, 1)
        self.tmz = QtWidgets.QLineEdit(self.frame_17)
        self.tmz.setObjectName("tmz")
        self.gridLayout_26.addWidget(self.tmz, 3, 1, 1, 1)
        self.label_66 = QtWidgets.QLabel(self.frame_17)
        self.label_66.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_66.setAlignment(QtCore.Qt.AlignCenter)
        self.label_66.setObjectName("label_66")
        self.gridLayout_26.addWidget(self.label_66, 0, 0, 1, 2)
        self.label_68 = QtWidgets.QLabel(self.frame_17)
        self.label_68.setObjectName("label_68")
        self.gridLayout_26.addWidget(self.label_68, 2, 0, 1, 1)
        self.label_69 = QtWidgets.QLabel(self.frame_17)
        self.label_69.setObjectName("label_69")
        self.gridLayout_26.addWidget(self.label_69, 3, 0, 1, 1)
        self.label_72 = QtWidgets.QLabel(self.frame_17)
        self.label_72.setObjectName("label_72")
        self.gridLayout_26.addWidget(self.label_72, 5, 0, 1, 1)
        self.tneutral = QtWidgets.QLabel(self.frame_17)
        self.tneutral.setText("")
        self.tneutral.setWordWrap(True)
        self.tneutral.setObjectName("tneutral")
        self.gridLayout_26.addWidget(self.tneutral, 5, 1, 1, 1)
        self.gridLayout_28.addWidget(self.frame_17, 1, 0, 1, 1)
        self.frame_16 = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.frame_16.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_16.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_16.setObjectName("frame_16")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.frame_16)
        self.gridLayout_25.setObjectName("gridLayout_25")
        self.label_65 = QtWidgets.QLabel(self.frame_16)
        self.label_65.setWordWrap(True)
        self.label_65.setObjectName("label_65")
        self.gridLayout_25.addWidget(self.label_65, 5, 1, 1, 1)
        self.label_63 = QtWidgets.QLabel(self.frame_16)
        self.label_63.setWordWrap(True)
        self.label_63.setObjectName("label_63")
        self.gridLayout_25.addWidget(self.label_63, 3, 1, 1, 1)
        self.label_61 = QtWidgets.QLabel(self.frame_16)
        self.label_61.setWordWrap(True)
        self.label_61.setObjectName("label_61")
        self.gridLayout_25.addWidget(self.label_61, 1, 1, 1, 1)
        self.qcg = QtWidgets.QLineEdit(self.frame_16)
        self.qcg.setObjectName("qcg")
        self.gridLayout_25.addWidget(self.qcg, 6, 1, 1, 1)
        self.msx = QtWidgets.QLineEdit(self.frame_16)
        self.msx.setObjectName("msx")
        self.gridLayout_25.addWidget(self.msx, 2, 0, 1, 1)
        self.label_64 = QtWidgets.QLabel(self.frame_16)
        self.label_64.setWordWrap(True)
        self.label_64.setObjectName("label_64")
        self.gridLayout_25.addWidget(self.label_64, 5, 0, 1, 1)
        self.mix = QtWidgets.QLineEdit(self.frame_16)
        self.mix.setObjectName("mix")
        self.gridLayout_25.addWidget(self.mix, 4, 0, 1, 1)
        self.miy = QtWidgets.QLineEdit(self.frame_16)
        self.miy.setObjectName("miy")
        self.gridLayout_25.addWidget(self.miy, 4, 1, 1, 1)
        self.at = QtWidgets.QLineEdit(self.frame_16)
        self.at.setObjectName("at")
        self.gridLayout_25.addWidget(self.at, 6, 0, 1, 1)
        self.msy = QtWidgets.QLineEdit(self.frame_16)
        self.msy.setObjectName("msy")
        self.gridLayout_25.addWidget(self.msy, 2, 1, 1, 1)
        self.label_62 = QtWidgets.QLabel(self.frame_16)
        self.label_62.setWordWrap(True)
        self.label_62.setObjectName("label_62")
        self.gridLayout_25.addWidget(self.label_62, 3, 0, 1, 1)
        self.label_60 = QtWidgets.QLabel(self.frame_16)
        self.label_60.setWordWrap(True)
        self.label_60.setObjectName("label_60")
        self.gridLayout_25.addWidget(self.label_60, 1, 0, 1, 1)
        self.label_59 = QtWidgets.QLabel(self.frame_16)
        self.label_59.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_59.setAlignment(QtCore.Qt.AlignCenter)
        self.label_59.setObjectName("label_59")
        self.gridLayout_25.addWidget(self.label_59, 0, 0, 1, 2)
        self.gridLayout_28.addWidget(self.frame_16, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout_29.addWidget(self.scrollArea, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_8)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.page_3)
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.label_12 = QtWidgets.QLabel(self.page_3)
        self.label_12.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.gridLayout_12.addWidget(self.label_12, 0, 0, 1, 1)
        self.radio_plane = QtWidgets.QRadioButton(self.page_3)
        self.radio_plane.setObjectName("radio_plane")
        self.gridLayout_12.addWidget(self.radio_plane, 1, 0, 1, 1)
        self.radio_triple = QtWidgets.QRadioButton(self.page_3)
        self.radio_triple.setObjectName("radio_triple")
        self.gridLayout_12.addWidget(self.radio_triple, 2, 0, 1, 1)
        self.frame_5 = QtWidgets.QFrame(self.page_3)
        self.frame_5.setFrameShape(QtWidgets.QFrame.Box)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.frame_5)
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.label_15 = QtWidgets.QLabel(self.frame_5)
        self.label_15.setObjectName("label_15")
        self.gridLayout_6.addWidget(self.label_15, 0, 0, 1, 1)
        self.sx = QtWidgets.QLineEdit(self.frame_5)
        self.sx.setObjectName("sx")
        self.gridLayout_6.addWidget(self.sx, 0, 1, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.frame_5)
        self.label_16.setObjectName("label_16")
        self.gridLayout_6.addWidget(self.label_16, 1, 0, 1, 1)
        self.sy = QtWidgets.QLineEdit(self.frame_5)
        self.sy.setObjectName("sy")
        self.gridLayout_6.addWidget(self.sy, 1, 1, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.frame_5)
        self.label_19.setObjectName("label_19")
        self.gridLayout_6.addWidget(self.label_19, 2, 0, 1, 1)
        self.sz = QtWidgets.QLineEdit(self.frame_5)
        self.sz.setObjectName("sz")
        self.gridLayout_6.addWidget(self.sz, 2, 1, 1, 1)
        self.label_18 = QtWidgets.QLabel(self.frame_5)
        self.label_18.setObjectName("label_18")
        self.gridLayout_6.addWidget(self.label_18, 3, 0, 1, 1)
        self.txy = QtWidgets.QLineEdit(self.frame_5)
        self.txy.setObjectName("txy")
        self.gridLayout_6.addWidget(self.txy, 3, 1, 1, 1)
        self.label_20 = QtWidgets.QLabel(self.frame_5)
        self.label_20.setObjectName("label_20")
        self.gridLayout_6.addWidget(self.label_20, 4, 0, 1, 1)
        self.txz = QtWidgets.QLineEdit(self.frame_5)
        self.txz.setObjectName("txz")
        self.gridLayout_6.addWidget(self.txz, 4, 1, 1, 1)
        self.label_21 = QtWidgets.QLabel(self.frame_5)
        self.label_21.setObjectName("label_21")
        self.gridLayout_6.addWidget(self.label_21, 5, 0, 1, 1)
        self.tyz = QtWidgets.QLineEdit(self.frame_5)
        self.tyz.setObjectName("tyz")
        self.gridLayout_6.addWidget(self.tyz, 5, 1, 1, 1)
        self.mohr_apply = QtWidgets.QPushButton(self.frame_5)
        self.mohr_apply.setObjectName("mohr_apply")
        self.gridLayout_6.addWidget(self.mohr_apply, 6, 0, 1, 2)
        self.gridLayout_12.addWidget(self.frame_5, 3, 0, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(20, 244, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_12.addItem(spacerItem7, 4, 0, 1, 1)
        self.stackedWidget.addWidget(self.page_3)
        self.verticalLayout_9.addWidget(self.stackedWidget)
        self.frame_6 = QtWidgets.QFrame(self.centralwidget)
        self.frame_6.setMinimumSize(QtCore.QSize(221, 0))
        self.frame_6.setMaximumSize(QtCore.QSize(221, 16777215))
        self.frame_6.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_6.setObjectName("frame_6")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.frame_6)
        self.gridLayout_15.setObjectName("gridLayout_15")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.int_plot = QtWidgets.QCheckBox(self.frame_6)
        self.int_plot.setChecked(True)
        self.int_plot.setObjectName("int_plot")
        self.horizontalLayout_2.addWidget(self.int_plot)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem8)
        self.push_to_talk = QtWidgets.QPushButton(self.frame_6)
        self.push_to_talk.setMaximumSize(QtCore.QSize(25, 25))
        self.push_to_talk.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.push_to_talk.setAutoFillBackground(False)
        self.push_to_talk.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/Figures/mic_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.push_to_talk.setIcon(icon8)
        self.push_to_talk.setIconSize(QtCore.QSize(25, 25))
        self.push_to_talk.setObjectName("push_to_talk")
        self.horizontalLayout_2.addWidget(self.push_to_talk)
        self.gridLayout_15.addLayout(self.horizontalLayout_2, 0, 0, 1, 1)
        self.label_22 = QtWidgets.QLabel(self.frame_6)
        self.label_22.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.label_22.setFrameShape(QtWidgets.QFrame.Box)
        self.label_22.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_22.setAlignment(QtCore.Qt.AlignCenter)
        self.label_22.setWordWrap(False)
        self.label_22.setObjectName("label_22")
        self.gridLayout_15.addWidget(self.label_22, 1, 0, 1, 1)
        self.gridLayout_13 = QtWidgets.QGridLayout()
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.label_23 = QtWidgets.QLabel(self.frame_6)
        self.label_23.setFrameShape(QtWidgets.QFrame.Box)
        self.label_23.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_23.setAlignment(QtCore.Qt.AlignCenter)
        self.label_23.setWordWrap(False)
        self.label_23.setObjectName("label_23")
        self.gridLayout_13.addWidget(self.label_23, 0, 0, 1, 1)
        self.label_24 = QtWidgets.QLabel(self.frame_6)
        self.label_24.setFrameShape(QtWidgets.QFrame.Box)
        self.label_24.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label_24.setAlignment(QtCore.Qt.AlignCenter)
        self.label_24.setWordWrap(False)
        self.label_24.setObjectName("label_24")
        self.gridLayout_13.addWidget(self.label_24, 0, 1, 1, 1)
        self.deadzone_x = QtWidgets.QLineEdit(self.frame_6)
        self.deadzone_x.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.deadzone_x.setAlignment(QtCore.Qt.AlignCenter)
        self.deadzone_x.setObjectName("deadzone_x")
        self.gridLayout_13.addWidget(self.deadzone_x, 1, 0, 1, 1)
        self.deadzone_y = QtWidgets.QLineEdit(self.frame_6)
        self.deadzone_y.setAlignment(QtCore.Qt.AlignCenter)
        self.deadzone_y.setObjectName("deadzone_y")
        self.gridLayout_13.addWidget(self.deadzone_y, 1, 1, 1, 1)
        self.gridLayout_15.addLayout(self.gridLayout_13, 2, 0, 1, 1)
        self.verticalLayout_9.addWidget(self.frame_6)
        self.verticalLayout_2.addLayout(self.verticalLayout_9)
        self.gridLayout_5.addLayout(self.verticalLayout_2, 0, 0, 2, 1)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setMinimumSize(QtCore.QSize(131, 66))
        self.frame.setMaximumSize(QtCore.QSize(16777215, 66))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setMidLineWidth(1)
        self.frame.setObjectName("frame")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame)
        self.pushButton_9.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_9.setAutoFillBackground(True)
        self.pushButton_9.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/Figures/answer.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_9.setIcon(icon9)
        self.pushButton_9.setIconSize(QtCore.QSize(35, 50))
        self.pushButton_9.setObjectName("pushButton_9")
        self.gridLayout_2.addWidget(self.pushButton_9, 1, 2, 1, 1)
        self.pushButton_7 = QtWidgets.QPushButton(self.frame)
        self.pushButton_7.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_7.setAutoFillBackground(True)
        self.pushButton_7.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/Figures/rectangle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_7.setIcon(icon10)
        self.pushButton_7.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_7.setObjectName("pushButton_7")
        self.gridLayout_2.addWidget(self.pushButton_7, 1, 0, 1, 1)
        self.pushButton_8 = QtWidgets.QPushButton(self.frame)
        self.pushButton_8.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_8.setAutoFillBackground(True)
        self.pushButton_8.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/Figures/arc.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_8.setIcon(icon11)
        self.pushButton_8.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_8.setObjectName("pushButton_8")
        self.gridLayout_2.addWidget(self.pushButton_8, 1, 1, 1, 1)
        self.pushButton_10 = QtWidgets.QPushButton(self.frame)
        self.pushButton_10.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_10.setAutoFillBackground(True)
        self.pushButton_10.setText("")
        self.pushButton_10.setIcon(icon7)
        self.pushButton_10.setIconSize(QtCore.QSize(28, 35))
        self.pushButton_10.setObjectName("pushButton_10")
        self.gridLayout_2.addWidget(self.pushButton_10, 1, 3, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.frame)
        self.label_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.gridLayout_2.addWidget(self.label_2, 0, 0, 1, 4)
        self.gridLayout_5.addWidget(self.frame, 0, 2, 1, 1)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setMinimumSize(QtCore.QSize(211, 66))
        self.frame_2.setMaximumSize(QtCore.QSize(16777215, 66))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame_2.setMidLineWidth(1)
        self.frame_2.setObjectName("frame_2")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame_2)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.pushButton_6 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_6.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_6.setAutoFillBackground(True)
        self.pushButton_6.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/Figures/trapezium.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_6.setIcon(icon12)
        self.pushButton_6.setIconSize(QtCore.QSize(40, 40))
        self.pushButton_6.setObjectName("pushButton_6")
        self.gridLayout_3.addWidget(self.pushButton_6, 1, 4, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.frame_2)
        self.pushButton.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton.setAutoFillBackground(True)
        self.pushButton.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/Figures/beam.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon13)
        self.pushButton.setIconSize(QtCore.QSize(40, 50))
        self.pushButton.setObjectName("pushButton")
        self.gridLayout_3.addWidget(self.pushButton, 1, 0, 1, 1)
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_5.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_5.setAutoFillBackground(True)
        self.pushButton_5.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/Figures/arrow.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5.setIcon(icon14)
        self.pushButton_5.setIconSize(QtCore.QSize(40, 35))
        self.pushButton_5.setObjectName("pushButton_5")
        self.gridLayout_3.addWidget(self.pushButton_5, 1, 3, 1, 1)
        self.label = QtWidgets.QLabel(self.frame_2)
        self.label.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 5)
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_4.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_4.setAutoFillBackground(True)
        self.pushButton_4.setText("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/Figures/support.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4.setIcon(icon15)
        self.pushButton_4.setIconSize(QtCore.QSize(40, 400))
        self.pushButton_4.setObjectName("pushButton_4")
        self.gridLayout_3.addWidget(self.pushButton_4, 1, 2, 1, 1)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_3.setMaximumSize(QtCore.QSize(28, 50))
        self.pushButton_3.setAutoFillBackground(True)
        self.pushButton_3.setText("")
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/Figures/node.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon16)
        self.pushButton_3.setIconSize(QtCore.QSize(50, 50))
        self.pushButton_3.setObjectName("pushButton_3")
        self.gridLayout_3.addWidget(self.pushButton_3, 1, 1, 1, 1)
        self.gridLayout_5.addWidget(self.frame_2, 0, 1, 1, 1)
        self.MplWidget = MplWidget(self.centralwidget)
        self.MplWidget.setObjectName("MplWidget")
        self.gridLayout_5.addWidget(self.MplWidget, 1, 1, 1, 3)
        tenshi.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(tenshi)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 824, 25))
        self.menubar.setObjectName("menubar")
        self.menuOp_es = QtWidgets.QMenu(self.menubar)
        self.menuOp_es.setObjectName("menuOp_es")
        self.menuResetar = QtWidgets.QMenu(self.menuOp_es)
        self.menuResetar.setObjectName("menuResetar")
        self.menuFonte = QtWidgets.QMenu(self.menuOp_es)
        self.menuFonte.setObjectName("menuFonte")
        self.translate_menu = QtWidgets.QMenu(self.menuOp_es)
        self.translate_menu.setObjectName("translate_menu")
        self.menuSalvar_e_Carregar = QtWidgets.QMenu(self.menubar)
        self.menuSalvar_e_Carregar.setObjectName("menuSalvar_e_Carregar")
        self.menuGerar_Explica_es = QtWidgets.QMenu(self.menubar)
        self.menuGerar_Explica_es.setObjectName("menuGerar_Explica_es")
        tenshi.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(tenshi)
        self.statusbar.setObjectName("statusbar")
        tenshi.setStatusBar(self.statusbar)
        self.save = QtWidgets.QAction(tenshi)
        self.save.setObjectName("save")
        self.load_button = QtWidgets.QAction(tenshi)
        self.load_button.setObjectName("load_button")
        self.actionComo_utilizar = QtWidgets.QAction(tenshi)
        self.actionComo_utilizar.setObjectName("actionComo_utilizar")
        self.solvestatic = QtWidgets.QAction(tenshi)
        self.solvestatic.setObjectName("solvestatic")
        self.solveresist = QtWidgets.QAction(tenshi)
        self.solveresist.setObjectName("solveresist")
        self.resetloads = QtWidgets.QAction(tenshi)
        self.resetloads.setObjectName("resetloads")
        self.resetall = QtWidgets.QAction(tenshi)
        self.resetall.setObjectName("resetall")
        self.undo = QtWidgets.QAction(tenshi)
        self.undo.setObjectName("undo")
        self.fontstructure = QtWidgets.QAction(tenshi)
        self.fontstructure.setObjectName("fontstructure")
        self.fontequations = QtWidgets.QAction(tenshi)
        self.fontequations.setObjectName("fontequations")
        self.translate_pt = QtWidgets.QAction(tenshi)
        self.translate_pt.setObjectName("translate_pt")
        self.translate_en = QtWidgets.QAction(tenshi)
        self.translate_en.setObjectName("translate_en")
        self.translate_nihongo = QtWidgets.QAction(tenshi)
        self.translate_nihongo.setObjectName("translate_nihongo")
        self.reset_st = QtWidgets.QAction(tenshi)
        self.reset_st.setObjectName("reset_st")
        self.font_interface = QtWidgets.QAction(tenshi)
        self.font_interface.setObjectName("font_interface")
        self.action = QtWidgets.QAction(tenshi)
        self.action.setObjectName("action")
        self.load_mohr = QtWidgets.QAction(tenshi)
        self.load_mohr.setObjectName("load_mohr")
        self.solvermohr = QtWidgets.QAction(tenshi)
        self.solvermohr.setObjectName("solvermohr")
        self.menuResetar.addAction(self.resetloads)
        self.menuResetar.addAction(self.resetall)
        self.menuResetar.addAction(self.undo)
        self.menuResetar.addSeparator()
        self.menuResetar.addAction(self.reset_st)
        self.menuFonte.addAction(self.font_interface)
        self.menuFonte.addAction(self.fontstructure)
        self.menuFonte.addAction(self.fontequations)
        self.translate_menu.addAction(self.translate_pt)
        self.translate_menu.addAction(self.translate_en)
        self.translate_menu.addAction(self.translate_nihongo)
        self.menuOp_es.addAction(self.menuResetar.menuAction())
        self.menuOp_es.addAction(self.menuFonte.menuAction())
        self.menuOp_es.addAction(self.translate_menu.menuAction())
        self.menuOp_es.addAction(self.actionComo_utilizar)
        self.menuSalvar_e_Carregar.addAction(self.save)
        self.menuSalvar_e_Carregar.addAction(self.load_button)
        self.menuGerar_Explica_es.addAction(self.solvestatic)
        self.menuGerar_Explica_es.addAction(self.solveresist)
        self.menuGerar_Explica_es.addAction(self.solvermohr)
        self.menubar.addAction(self.menuOp_es.menuAction())
        self.menubar.addAction(self.menuSalvar_e_Carregar.menuAction())
        self.menubar.addAction(self.menuGerar_Explica_es.menuAction())

        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(tenshi)
        tenshi.setTabOrder(self.beam_list, self.beam_plus)
        tenshi.setTabOrder(self.beam_plus, self.beam_x1)
        tenshi.setTabOrder(self.beam_x1, self.beam_y1)
        tenshi.setTabOrder(self.beam_y1, self.beam_x2)
        tenshi.setTabOrder(self.beam_x2, self.beam_y2)
        tenshi.setTabOrder(self.beam_y2, self.utilizeinfo)
        tenshi.setTabOrder(self.utilizeinfo, self.elementtype)
        tenshi.setTabOrder(self.elementtype, self.beam_E)
        tenshi.setTabOrder(self.beam_E, self.beam_I)
        tenshi.setTabOrder(self.beam_I, self.beam_A)
        tenshi.setTabOrder(self.beam_A, self.beam_apply)
        tenshi.setTabOrder(self.beam_apply, self.beam_remove)
        tenshi.setTabOrder(self.beam_remove, self.pushButton)
        tenshi.setTabOrder(self.pushButton, self.pushButton_3)
        tenshi.setTabOrder(self.pushButton_3, self.pushButton_4)
        tenshi.setTabOrder(self.pushButton_4, self.pushButton_5)
        tenshi.setTabOrder(self.pushButton_5, self.pushButton_6)
        tenshi.setTabOrder(self.pushButton_6, self.pushButton_7)
        tenshi.setTabOrder(self.pushButton_7, self.pushButton_8)
        tenshi.setTabOrder(self.pushButton_8, self.pushButton_9)
        tenshi.setTabOrder(self.pushButton_9, self.show_structure)
        tenshi.setTabOrder(self.show_structure, self.show_sec)
        tenshi.setTabOrder(self.show_sec, self.show_supports)
        tenshi.setTabOrder(self.show_supports, self.show_normal)
        tenshi.setTabOrder(self.show_normal, self.show_shear)
        tenshi.setTabOrder(self.show_shear, self.show_moment)
        tenshi.setTabOrder(self.show_moment, self.show_displacement)
        tenshi.setTabOrder(self.show_displacement, self.node_list)
        tenshi.setTabOrder(self.node_list, self.node_plus)
        tenshi.setTabOrder(self.node_plus, self.node_x)
        tenshi.setTabOrder(self.node_x, self.node_y)
        tenshi.setTabOrder(self.node_y, self.node_id)
        tenshi.setTabOrder(self.node_id, self.node_apply)
        tenshi.setTabOrder(self.node_apply, self.node_remove)
        tenshi.setTabOrder(self.node_remove, self.support_list)
        tenshi.setTabOrder(self.support_list, self.support_plus)
        tenshi.setTabOrder(self.support_plus, self.support_pos)
        tenshi.setTabOrder(self.support_pos, self.support_angle)
        tenshi.setTabOrder(self.support_angle, self.support_apply)
        tenshi.setTabOrder(self.support_apply, self.support_remove)
        tenshi.setTabOrder(self.support_remove, self.load_list)
        tenshi.setTabOrder(self.load_list, self.load_plus)
        tenshi.setTabOrder(self.load_plus, self.load_pos)
        tenshi.setTabOrder(self.load_pos, self.load_y)
        tenshi.setTabOrder(self.load_y, self.load_x)
        tenshi.setTabOrder(self.load_x, self.load_angle)
        tenshi.setTabOrder(self.load_angle, self.load_moment)
        tenshi.setTabOrder(self.load_moment, self.load_apply)
        tenshi.setTabOrder(self.load_apply, self.load_remove)
        tenshi.setTabOrder(self.load_remove, self.qload_list)
        tenshi.setTabOrder(self.qload_list, self.qload_plus)
        tenshi.setTabOrder(self.qload_plus, self.qload_pos)
        tenshi.setTabOrder(self.qload_pos, self.qload_initial)
        tenshi.setTabOrder(self.qload_initial, self.qload_final)
        tenshi.setTabOrder(self.qload_final, self.qload_apply)
        tenshi.setTabOrder(self.qload_apply, self.qload_remove)
        tenshi.setTabOrder(self.qload_remove, self.rect_list)
        tenshi.setTabOrder(self.rect_list, self.rect_plus)
        tenshi.setTabOrder(self.rect_plus, self.rect_visualize)
        tenshi.setTabOrder(self.rect_visualize, self.rect_x1)
        tenshi.setTabOrder(self.rect_x1, self.rect_y1)
        tenshi.setTabOrder(self.rect_y1, self.rect_x2)
        tenshi.setTabOrder(self.rect_x2, self.rect_y2)
        tenshi.setTabOrder(self.rect_y2, self.rect_apply)
        tenshi.setTabOrder(self.rect_apply, self.rect_remove)
        tenshi.setTabOrder(self.rect_remove, self.circle_list)
        tenshi.setTabOrder(self.circle_list, self.circle_plus)
        tenshi.setTabOrder(self.circle_plus, self.circle_visualize)
        tenshi.setTabOrder(self.circle_visualize, self.circle_x)
        tenshi.setTabOrder(self.circle_x, self.circle_y)
        tenshi.setTabOrder(self.circle_y, self.circle_r)
        tenshi.setTabOrder(self.circle_r, self.circle_ai)
        tenshi.setTabOrder(self.circle_ai, self.circle_af)
        tenshi.setTabOrder(self.circle_af, self.circle_apply)
        tenshi.setTabOrder(self.circle_apply, self.circle_remove)
        tenshi.setTabOrder(self.circle_remove, self.scrollArea)
        tenshi.setTabOrder(self.scrollArea, self.msx)
        tenshi.setTabOrder(self.msx, self.msy)
        tenshi.setTabOrder(self.msy, self.mix)
        tenshi.setTabOrder(self.mix, self.miy)
        tenshi.setTabOrder(self.miy, self.at)
        tenshi.setTabOrder(self.at, self.qcg)
        tenshi.setTabOrder(self.qcg, self.tnormal)
        tenshi.setTabOrder(self.tnormal, self.tmy)
        tenshi.setTabOrder(self.tmy, self.tmz)
        tenshi.setTabOrder(self.tmz, self.tncalculate)
        tenshi.setTabOrder(self.tncalculate, self.tshear)
        tenshi.setTabOrder(self.tshear, self.tcontact)
        tenshi.setTabOrder(self.tcontact, self.twidth)
        tenshi.setTabOrder(self.twidth, self.tfosbox)
        tenshi.setTabOrder(self.tfosbox, self.tfos)
        tenshi.setTabOrder(self.tfos, self.tscalculate)

        if "pt" in locale.windows_locale[ctypes.windll.kernel32.GetUserDefaultUILanguage()]:
            self.retranslateUi()
        else:
            self.retranslateUiEN()
        tenshi.setWindowTitle("Tenshi")
        self.beam_x1.setValidator(QtGui.QDoubleValidator())
        self.beam_y1.setValidator(QtGui.QDoubleValidator())
        self.beam_x2.setValidator(QtGui.QDoubleValidator())
        self.beam_y2.setValidator(QtGui.QDoubleValidator())
        self.beam_E.setValidator(QtGui.QDoubleValidator())
        self.beam_A.setValidator(QtGui.QDoubleValidator())
        self.beam_I.setValidator(QtGui.QDoubleValidator())
        self.node_x.setValidator(QtGui.QDoubleValidator())
        self.node_y.setValidator(QtGui.QDoubleValidator())
        self.node_id.setValidator(QtGui.QIntValidator(1, 100))
        self.support_pos.setValidator(QtGui.QIntValidator(1, 100))
        self.support_angle.setValidator(QtGui.QDoubleValidator())
        self.spring_k.setValidator(QtGui.QDoubleValidator())
        self.spring_translation.setValidator(QtGui.QRegExpValidator())
        self.load_pos.setValidator(QtGui.QIntValidator(1, 100))
        self.load_y.setValidator(QtGui.QDoubleValidator())
        self.load_x.setValidator(QtGui.QDoubleValidator())
        self.load_moment.setValidator(QtGui.QDoubleValidator())
        self.qload_pos.setValidator(QtGui.QIntValidator(1, 100))
        self.qload_initial.setValidator(QtGui.QDoubleValidator())
        self.qload_final.setValidator(QtGui.QDoubleValidator())
        self.rect_x1.setValidator(QtGui.QDoubleValidator())
        self.rect_y1.setValidator(QtGui.QDoubleValidator())
        self.rect_x2.setValidator(QtGui.QDoubleValidator())
        self.rect_y2.setValidator(QtGui.QDoubleValidator())
        self.msx.setValidator(QtGui.QDoubleValidator())
        self.msy.setValidator(QtGui.QDoubleValidator())
        self.mix.setValidator(QtGui.QDoubleValidator())
        self.miy.setValidator(QtGui.QDoubleValidator())
        self.at.setValidator(QtGui.QDoubleValidator())
        self.qcg.setValidator(QtGui.QDoubleValidator())
        self.tnormal.setValidator(QtGui.QDoubleValidator())
        self.tmy.setValidator(QtGui.QDoubleValidator())
        self.tmz.setValidator(QtGui.QDoubleValidator())
        self.tshear.setValidator(QtGui.QDoubleValidator())
        self.tcontact.setValidator(QtGui.QDoubleValidator())
        self.twidth.setValidator(QtGui.QDoubleValidator())
        self.tfos.setValidator(QtGui.QDoubleValidator())
        self.deadzone_x.setValidator(QtGui.QIntValidator(0, 1000))
        self.deadzone_y.setValidator(QtGui.QIntValidator(0, 1000))

        self.pushButton.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(0))
        self.pushButton_3.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(1))
        self.pushButton_4.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(2))
        self.pushButton_5.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(3))
        self.pushButton_6.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(4))
        self.pushButton_7.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(5))
        self.pushButton_8.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(6))
        self.pushButton_9.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(7))
        self.pushButton_10.clicked.connect(lambda: self.stackedWidget.setCurrentIndex(8))
        if not os.path.isdir("Settings"):
            os.mkdir("Settings")
        if not os.path.isfile("Settings\\blank.pkl"):
            with open('Settings\\blank.pkl', 'wb') as f:
                pickle.dump((self.ss, self.sig), f)
        if not os.path.isdir("Settings\\figs"):
            os.makedirs("Settings\\figs")

        self.disable_buttons()
        self.frame_4.setHidden(True)
        self.support_angle.setHidden(True)
        self.label_27.setHidden(True)
        self.label_71.setHidden(True)
        self.label_73.setHidden(True)
        self.spring_k.setHidden(True)
        self.spring_translation.setHidden(True)
        self.radio_plane.setChecked(True)
        self.switch_states_plane()

        self.beam_apply.clicked.connect(self.beam)
        self.utilizeinfo.stateChanged.connect(self.beam_info)
        self.elementtype.currentIndexChanged.connect(self.element_type_list)
        self.node_apply.clicked.connect(self.node)
        self.support_apply.clicked.connect(self.support)
        self.support_roll.clicked.connect(self.show_support_stuff)
        self.support_hinged.clicked.connect(self.show_support_stuff)
        self.support_fixed.clicked.connect(self.show_support_stuff)
        self.support_spring.clicked.connect(self.show_support_stuff)
        self.load_apply.clicked.connect(self.load)
        self.qload_apply.clicked.connect(self.qload)
        self.show_structure.clicked.connect(self.visualize_structure)
        self.show_supports.clicked.connect(self.visualize_supports)
        self.show_normal.clicked.connect(self.visualize_normal)
        self.show_shear.clicked.connect(self.visualize_shear)
        self.show_moment.clicked.connect(self.visualize_moment)
        self.show_displacement.clicked.connect(self.visualize_displacement)
        self.solvestatic.triggered.connect(self.static_solver)
        self.resetloads.triggered.connect(self.reset)
        self.resetall.triggered.connect(self.reset_all)

        self.solveresist.triggered.connect(self.rm_solver)
        self.rect_apply.clicked.connect(self.update_ret)
        self.circle_apply.clicked.connect(self.update_cir)
        self.tncalculate.clicked.connect(self.get_sigma_T)
        self.tscalculate.clicked.connect(self.get_cis)

        self.rect_list.currentIndexChanged.connect(self.change_table_rect)
        self.rect_plus.clicked.connect(self.add_rect_item)
        self.circle_list.currentIndexChanged.connect(self.change_table_circ)
        self.rect_visualize.stateChanged.connect(self.plot_sec)
        self.circle_visualize.stateChanged.connect(self.plot_sec)
        self.rect_remove.clicked.connect(self.remove_rectangle)
        self.circle_remove.clicked.connect(self.remove_circle)
        self.show_sec.clicked.connect(self.plot_sec)
        self.reset_st.triggered.connect(self.transv_reset)

        self.radio_plane.clicked.connect(self.switch_states_plane)
        self.radio_triple.clicked.connect(self.switch_states_triple)
        self.mohr_apply.clicked.connect(self.draw_mohr)

        self.save.triggered.connect(self.save_structure)
        self.load_button.triggered.connect(self.load_file)
        self.undo.triggered.connect(self.undo_previous)
        self.translate_pt.triggered.connect(self.retranslateUi)
        self.translate_en.triggered.connect(self.retranslateUiEN)

        self.fontstructure.triggered.connect(self.fontstruct)
        self.fontequations.triggered.connect(self.fonteq)
        self.font_interface.triggered.connect(self.UI_font)

        self.show_mohr.clicked.connect(self.visualize_mohr)
        self.solvermohr.triggered.connect(self.mohr_solver)
        self.MplWidget.canvas.mpl_connect('button_press_event', self.onclick)
        self.MplWidget.canvas.mpl_connect('button_release_event', self.on_release)

        self.push_to_talk.clicked.connect(self.listener)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        tenshi.setWindowTitle(_translate("tenshi", "Tenshi"))
        self.label_13.setText(_translate("tenshi", "Elemento de Estrutura"))
        self.label_7.setText(_translate("tenshi", "Coordenadas"))
        self.label_6.setText(_translate("tenshi", "Y2"))
        self.label_5.setText(_translate("tenshi", "X2"))
        self.label_3.setText(_translate("tenshi", "X1"))
        self.label_4.setText(_translate("tenshi", "Y1"))
        self.beam_list.setItemText(0, _translate("tenshi", "Seção 1"))
        self.beam_plus.setText(_translate("tenshi", "+"))
        self.utilizeinfo.setText(_translate("tenshi", "Utilizar Dados do Material"))
        self.label_10.setText(_translate("tenshi", "Momento de Inércia"))
        self.label_14.setText(_translate("tenshi", "Tipo de Elemento"))
        self.label_9.setText(_translate("tenshi", "Módulo de Elasticidade"))
        self.elementtype.setItemText(0, _translate("tenshi", "Viga"))
        self.elementtype.setItemText(1, _translate("tenshi", "Treliça"))
        self.label_11.setText(_translate("tenshi", "Área da Seção Transversal"))
        self.label_8.setText(_translate("tenshi", "Dados do Material"))
        self.beam_apply.setText(_translate("tenshi", "Aplicar"))
        self.beam_remove.setText(_translate("tenshi", "Remover"))
        self.label_42.setText(_translate("tenshi", "Nó"))
        self.node_list.setItemText(0, _translate("tenshi", "Nó 1"))
        self.node_plus.setText(_translate("tenshi", "+"))
        self.label_29.setText(_translate("tenshi", "Coordenadas"))
        self.label_31.setText(_translate("tenshi", "Y"))
        self.label_30.setText(_translate("tenshi", "X"))
        self.label_17.setText(_translate("tenshi", "Adicionar após nó:"))
        self.label_43.setText(_translate("tenshi", "ID"))
        self.node_apply.setText(_translate("tenshi", "Aplicar"))
        self.node_remove.setText(_translate("tenshi", "Remover"))
        self.label_25.setText(_translate("tenshi", "Apoios"))
        self.support_list.setItemText(0, _translate("tenshi", "Apoio 1"))
        self.support_plus.setText(_translate("tenshi", "+"))
        self.support_roll.setText(_translate("tenshi", "Móvel"))
        self.support_hinged.setText(_translate("tenshi", "Fixo"))
        self.support_fixed.setText(_translate("tenshi", "Engaste"))
        self.label_26.setText(_translate("tenshi", "Posição"))
        self.label_27.setText(_translate("tenshi", "Ângulo"))
        self.support_apply.setText(_translate("tenshi", "Aplicar"))
        self.support_remove.setText(_translate("tenshi", "Remover"))
        self.label_28.setText(_translate("tenshi", "Esforços Pontuais"))
        self.load_list.setItemText(0, _translate("tenshi", "Esforço 1"))
        self.load_plus.setText(_translate("tenshi", "+"))
        self.label_32.setText(_translate("tenshi", "Intensidade em Y"))
        self.label_33.setText(_translate("tenshi", "Intensidade em X"))
        self.label_36.setText(_translate("tenshi", "Posição"))
        self.label_34.setText(_translate("tenshi", "Ângulo"))
        self.label_35.setText(_translate("tenshi", "Momento"))
        self.load_apply.setText(_translate("tenshi", "Aplicar"))
        self.load_remove.setText(_translate("tenshi", "Remover"))
        self.label_37.setText(_translate("tenshi", "Cargas Distribuídas"))
        self.qload_list.setItemText(0, _translate("tenshi", "Carga 1"))
        self.qload_plus.setText(_translate("tenshi", "+"))
        self.label_38.setText(_translate("tenshi", "Posição"))
        self.label_39.setText(_translate("tenshi", "Intensidade Inicial"))
        self.label_40.setText(_translate("tenshi", "Intensidade Final"))
        self.qload_apply.setText(_translate("tenshi", "Aplicar"))
        self.qload_remove.setText(_translate("tenshi", "Remover"))
        self.label_44.setText(_translate("tenshi", "Sub-Área Retangular"))
        self.rect_list.setItemText(0, _translate("tenshi", "Ret. 1"))
        self.rect_plus.setText(_translate("tenshi", "+"))
        self.rect_visualize.setText(_translate("tenshi", "Destacar Sub-Área"))
        self.label_49.setText(_translate("tenshi", "Coordenadas dos Vértices"))
        self.label_50.setText(_translate("tenshi", "Acima na Esquerda"))
        self.label_45.setText(_translate("tenshi", "X"))
        self.label_46.setText(_translate("tenshi", "Y"))
        self.label_51.setText(_translate("tenshi", "Abaixo na Direita"))
        self.label_47.setText(_translate("tenshi", "X"))
        self.label_48.setText(_translate("tenshi", "Y"))
        self.rect_apply.setText(_translate("tenshi", "Aplicar"))
        self.rect_remove.setText(_translate("tenshi", "Remover"))
        self.label_52.setText(_translate("tenshi", "Sub-Área Circular"))
        self.circle_list.setItemText(0, _translate("tenshi", "Arco 1"))
        self.circle_plus.setText(_translate("tenshi", "+"))
        self.circle_visualize.setText(_translate("tenshi", "Destacar Sub-Área"))
        self.label_53.setText(_translate("tenshi", "Coordenadas do Centro"))
        self.label_54.setText(_translate("tenshi", "X"))
        self.label_55.setText(_translate("tenshi", "Y"))
        self.label_56.setText(_translate("tenshi", "Raio"))
        self.label_57.setText(_translate("tenshi", "Ângulo Inicial"))
        self.label_58.setText(_translate("tenshi", "Ângulo Final"))
        self.circle_apply.setText(_translate("tenshi", "Aplicar"))
        self.circle_remove.setText(_translate("tenshi", "Remover"))
        self.label_74.setText(_translate("tenshi", "Tensão e Fluxo de Cisalhamento"))
        self.tfosbox.setItemText(0, _translate("tenshi", "Força"))
        self.tfosbox.setItemText(1, _translate("tenshi", "Espaçamento"))
        self.label_75.setText(_translate("tenshi", "Cortante"))
        self.label_80.setText(_translate("tenshi", "Fluxo de Cisalhamento:"))
        self.label_78.setText(_translate("tenshi", "Tensão de Cisalhamento:"))
        self.label_77.setText(_translate("tenshi", "Espessura (t)"))
        self.label_76.setText(_translate("tenshi", "Áreas de Contato"))
        self.tscalculate.setText(_translate("tenshi", "Calcular"))
        self.label_70.setText(_translate("tenshi", "Tensão Normal:"))
        self.tncalculate.setText(_translate("tenshi", "Calcular"))
        self.label_67.setText(_translate("tenshi", "Normal"))
        self.label_66.setText(_translate("tenshi", "Tensão Normal"))
        self.label_68.setText(_translate("tenshi", "Momento em Y"))
        self.label_69.setText(_translate("tenshi", "Momento em Z"))
        self.label_72.setText(_translate("tenshi", "Linha Neutra:"))
        self.label_65.setText(_translate("tenshi", "Q (CG)"))
        self.label_63.setText(_translate("tenshi", "Momento de Inércia em Y (CG)"))
        self.label_61.setText(_translate("tenshi", "Momento Estático em Y (Origem)"))
        self.label_64.setText(_translate("tenshi", "Área Total"))
        self.label_62.setText(_translate("tenshi", "Momento de Inércia em Z (CG)"))
        self.label_60.setText(_translate("tenshi", "Momento Estático em Z (Origem)"))
        self.label_59.setText(_translate("tenshi", "Dados/Resultados"))
        self.label_12.setText(_translate("tenshi", "Círculo de Mohr"))
        self.radio_plane.setText(_translate("tenshi", "Estado Plano"))
        self.radio_triple.setText(_translate("tenshi", "Estado Triplo"))
        self.label_15.setText(_translate("tenshi", "σx"))
        self.label_16.setText(_translate("tenshi", "σy"))
        self.label_19.setText(_translate("tenshi", "σz"))
        self.label_18.setText(_translate("tenshi", "τxy"))
        self.label_20.setText(_translate("tenshi", "τxz"))
        self.label_21.setText(_translate("tenshi", "τyz"))
        self.mohr_apply.setText(_translate("tenshi", "Aplicar"))
        self.pushButton_6.setToolTip(_translate("tenshi", "Adicionar cargas distribuídas"))
        self.pushButton.setToolTip(_translate("tenshi", "Adicionar elemento de estrutura"))
        self.pushButton_5.setToolTip(_translate("tenshi", "Adicionar esforços pontuais"))
        self.label.setText(_translate("tenshi", "Estrutura"))
        self.pushButton_4.setToolTip(_translate("tenshi", "Adicionar apoios"))
        self.pushButton_3.setToolTip(_translate("tenshi", "Adicionar nó"))
        self.pushButton_9.setToolTip(_translate("tenshi", "Dados / Resultados"))
        self.pushButton_7.setToolTip(_translate("tenshi", "Adicionar retângulos"))
        self.pushButton_8.setToolTip(_translate("tenshi", "Adicionar arcos"))
        self.pushButton_10.setToolTip(_translate("tenshi", "Círculo de Mohr"))
        self.label_2.setText(_translate("tenshi", "Seção Transversal"))
        self.show_supports.setToolTip(_translate("tenshi", "Visualizar reações dos apoios"))
        self.show_sec.setToolTip(_translate("tenshi", "Visualizar seção transversal"))
        self.show_displacement.setToolTip(_translate("tenshi", "Visualizar deslocamento"))
        self.show_moment.setToolTip(_translate("tenshi", "Visualizar momento fletor"))
        self.show_normal.setToolTip(_translate("tenshi", "Visualizar força normal"))
        self.show_structure.setToolTip(_translate("tenshi", "Visualizar estrutura"))
        self.show_shear.setToolTip(_translate("tenshi", "Visualizar força cortante"))
        self.label_41.setText(_translate("tenshi", "Desenhos e Diagramas"))
        self.menuOp_es.setTitle(_translate("tenshi", "Opções"))
        self.menuResetar.setTitle(_translate("tenshi", "Resetar..."))
        self.menuFonte.setTitle(_translate("tenshi", "Fonte..."))
        self.translate_menu.setTitle(_translate("tenshi", "Traduzir..."))
        self.menuSalvar_e_Carregar.setTitle(_translate("tenshi", "Salvar e Carregar"))
        self.menuGerar_Explica_es.setTitle(_translate("tenshi", "Gerar Resoluções"))
        self.save.setText(_translate("tenshi", "Salvar Tudo"))
        self.load_button.setText(_translate("tenshi", "Carregar"))
        self.actionComo_utilizar.setText(_translate("tenshi", "Como utilizar"))
        self.solvestatic.setText(_translate("tenshi", "Estática das Estruturas"))
        self.solveresist.setText(_translate("tenshi", "Seção Transversal"))
        self.resetloads.setText(_translate("tenshi", "Esforços"))
        self.resetall.setText(_translate("tenshi", "Elementos"))
        self.undo.setText(_translate("tenshi", "Ação Anterior"))
        self.undo.setShortcut(_translate("tenshi", "Ctrl+Z"))
        self.fontstructure.setText(_translate("tenshi", "Estrutura"))
        self.fontequations.setText(_translate("tenshi", "Equações"))
        self.translate_pt.setText(_translate("tenshi", "Português"))
        self.translate_en.setText(_translate("tenshi", "English"))
        self.translate_nihongo.setText(_translate("tenshi", "日本語"))
        self.reset_st.setText(_translate("tenshi", "Seção Transversal"))
        self.font_interface.setText(_translate("tenshi", "Interface"))
        self.solvermohr.setText(_translate("tenshi", "Círculo de Mohr"))
        self.load_structure_str = "Carregar Arquivo"
        self.strucutre_type_str = "Estrutura(*.pkl)"
        self.warning_str = "É necessário mais informações"
        self.warning_title = "Erro"
        self.latex_error_str = "É necessário ter o Miktex instalado para gerar a resolução"
        self.font_size_str = "Tamanho da Fonte"
        self.font_strucuture_str = "Fonte da Estrutura:"
        self.font_equations_str = "Fonte das Equações:"
        self.rect_values_error = "Valores inválidos. Provavelmente valores foram invertidos."
        self.show_mohr.setToolTip(_translate("tenshi", "Visualizar Círculo de Mohr"))
        self.int_plot.setText(_translate("tenshi", "Gráfico Interativo"))
        self.push_to_talk.setToolTip(_translate("tenshi", "Utilizar comandos de voz"))
        self.push_to_talk.setShortcut(_translate("tenshi", "V"))
        self.label_22.setText(_translate("tenshi", "Precisão do Mouse (Decimais)"))
        self.label_23.setText(_translate("tenshi", "X"))
        self.label_24.setText(_translate("tenshi", "Y"))
        self.deadzone_x.setText(_translate("tenshi", "0"))
        self.deadzone_y.setText(_translate("tenshi", "0"))
        self.support_spring.setText(_translate("tenshi", "Mola"))
        self.label_73.setText(_translate("tenshi", "K"))
        self.label_71.setText(_translate("tenshi", "Translação"))

    def retranslateUiEN(self):
        _translate = QtCore.QCoreApplication.translate
        self.label_13.setText(_translate("tenshi", "Structure Element"))
        self.label_7.setText(_translate("tenshi", "Coordinates"))
        self.label_6.setText(_translate("tenshi", "Y2"))
        self.label_5.setText(_translate("tenshi", "X2"))
        self.label_3.setText(_translate("tenshi", "X1"))
        self.label_4.setText(_translate("tenshi", "Y1"))
        self.beam_list.setItemText(0, _translate("tenshi", "Section 1"))
        self.beam_plus.setText(_translate("tenshi", "+"))
        self.utilizeinfo.setText(_translate("tenshi", "Specify Material"))
        self.label_10.setText(_translate("tenshi", "Moment of Inertia"))
        self.label_14.setText(_translate("tenshi", "Element Type"))
        self.label_9.setText(_translate("tenshi", "Modulus of Elasticity"))
        self.elementtype.setItemText(0, _translate("tenshi", "Beam"))
        self.elementtype.setItemText(1, _translate("tenshi", "Truss"))
        self.label_11.setText(_translate("tenshi", "Cross Section Area"))
        self.label_8.setText(_translate("tenshi", "Material Information"))
        self.beam_apply.setText(_translate("tenshi", "Apply"))
        self.beam_remove.setText(_translate("tenshi", "Remove"))
        self.label_42.setText(_translate("tenshi", "Node"))
        self.node_list.setItemText(0, _translate("tenshi", "Node 1"))
        self.node_plus.setText(_translate("tenshi", "+"))
        self.label_29.setText(_translate("tenshi", "Coordinates"))
        self.label_31.setText(_translate("tenshi", "Y"))
        self.label_30.setText(_translate("tenshi", "X"))
        self.label_17.setText(_translate("tenshi", "Add after node:"))
        self.label_43.setText(_translate("tenshi", "ID"))
        self.node_apply.setText(_translate("tenshi", "Apply"))
        self.node_remove.setText(_translate("tenshi", "Remove"))
        self.label_25.setText(_translate("tenshi", "Supports"))
        self.support_list.setItemText(0, _translate("tenshi", "Support 1"))
        self.support_plus.setText(_translate("tenshi", "+"))
        self.support_roll.setText(_translate("tenshi", "Roll"))
        self.support_hinged.setText(_translate("tenshi", "Hinged"))
        self.support_fixed.setText(_translate("tenshi", "Fixed"))
        self.label_26.setText(_translate("tenshi", "Position"))
        self.label_27.setText(_translate("tenshi", "Angle"))
        self.support_apply.setText(_translate("tenshi", "Apply"))
        self.support_remove.setText(_translate("tenshi", "Remove"))
        self.label_28.setText(_translate("tenshi", "Loads"))
        self.load_list.setItemText(0, _translate("tenshi", "Load 1"))
        self.load_plus.setText(_translate("tenshi", "+"))
        self.label_36.setText(_translate("tenshi", "Position"))
        self.label_32.setText(_translate("tenshi", "Y Intensity"))
        self.label_33.setText(_translate("tenshi", "X Intensity"))
        self.label_34.setText(_translate("tenshi", "Angle"))
        self.label_35.setText(_translate("tenshi", "Moment"))
        self.load_apply.setText(_translate("tenshi", "Apply"))
        self.load_remove.setText(_translate("tenshi", "Remove"))
        self.label_37.setText(_translate("tenshi", "Distributed Loads"))
        self.qload_list.setItemText(0, _translate("tenshi", "Load 1"))
        self.qload_plus.setText(_translate("tenshi", "+"))
        self.label_38.setText(_translate("tenshi", "Position"))
        self.label_39.setText(_translate("tenshi", "Initial Intensity"))
        self.label_40.setText(_translate("tenshi", "Final Intensity"))
        self.qload_apply.setText(_translate("tenshi", "Apply"))
        self.qload_remove.setText(_translate("tenshi", "Remove"))
        self.label_44.setText(_translate("tenshi", "Rectangular Sub-Area"))
        self.rect_list.setItemText(0, _translate("tenshi", "Rect. 1"))
        self.rect_plus.setText(_translate("tenshi", "+"))
        self.rect_visualize.setText(_translate("tenshi", "Highlight Sub-Area"))
        self.label_49.setText(_translate("tenshi", "Vertex Coordinates"))
        self.label_50.setText(_translate("tenshi", "Upper Left"))
        self.label_45.setText(_translate("tenshi", "X"))
        self.label_46.setText(_translate("tenshi", "Y"))
        self.label_51.setText(_translate("tenshi", "Down Right"))
        self.label_47.setText(_translate("tenshi", "X"))
        self.label_48.setText(_translate("tenshi", "Y"))
        self.rect_apply.setText(_translate("tenshi", "Apply"))
        self.rect_remove.setText(_translate("tenshi", "Remove"))
        self.label_52.setText(_translate("tenshi", "Circular Sub-Area"))
        self.circle_list.setItemText(0, _translate("tenshi", "Arc 1"))
        self.circle_plus.setText(_translate("tenshi", "+"))
        self.circle_visualize.setText(_translate("tenshi", "Highlight Sub-Area"))
        self.label_53.setText(_translate("tenshi", "Center Coordinates"))
        self.label_54.setText(_translate("tenshi", "X"))
        self.label_55.setText(_translate("tenshi", "Y"))
        self.label_56.setText(_translate("tenshi", "Radius"))
        self.label_57.setText(_translate("tenshi", "Initial Angle"))
        self.label_58.setText(_translate("tenshi", "Final Angle"))
        self.circle_apply.setText(_translate("tenshi", "Apply"))
        self.circle_remove.setText(_translate("tenshi", "Remove"))
        self.label_70.setText(_translate("tenshi", "Normal Tension:"))
        self.tncalculate.setText(_translate("tenshi", "Calculate"))
        self.label_67.setText(_translate("tenshi", "Normal Force"))
        self.label_66.setText(_translate("tenshi", "Normal Tension"))
        self.label_68.setText(_translate("tenshi", "Y Moment"))
        self.label_69.setText(_translate("tenshi", "Z Moment"))
        self.label_72.setText(_translate("tenshi", "Neutral Line:"))
        self.label_65.setText(_translate("tenshi", "Q (Centroid)"))
        self.label_63.setText(_translate("tenshi", "Y Moment of Inertia (Centroid)"))
        self.label_61.setText(_translate("tenshi", "Y Static Moment (Origin)"))
        self.label_64.setText(_translate("tenshi", "Total Area"))
        self.label_62.setText(_translate("tenshi", "X Moment of Inertia (Centroid)"))
        self.label_60.setText(_translate("tenshi", "X Static Moment (Origin)"))
        self.label_59.setText(_translate("tenshi", "Results"))
        self.reset_st.setText(_translate("tenshi", "Reset Cross Section"))
        self.label_74.setText(_translate("tenshi", "Shear Tension and Flux"))
        self.tfosbox.setItemText(0, _translate("tenshi", "Force"))
        self.tfosbox.setItemText(1, _translate("tenshi", "Spacing"))
        self.label_75.setText(_translate("tenshi", "Shear Force"))
        self.label_80.setText(_translate("tenshi", "Shear Flux:"))
        self.label_78.setText(_translate("tenshi", "Shear Tension:"))
        self.label_77.setText(_translate("tenshi", "Thickness (t)"))
        self.label_76.setText(_translate("tenshi", "Contact Areas"))
        self.tscalculate.setText(_translate("tenshi", "Calculate"))
        self.pushButton_6.setToolTip(_translate("tenshi", "Add distributed loads"))
        self.pushButton.setToolTip(_translate("tenshi", "Add structure element"))
        self.pushButton_5.setToolTip(_translate("tenshi", "Add loads"))
        self.label.setText(_translate("tenshi", "Structure"))
        self.pushButton_4.setToolTip(_translate("tenshi", "Add supports"))
        self.pushButton_3.setToolTip(_translate("tenshi", "Add node"))
        self.label_2.setText(_translate("tenshi", "Cross Section"))
        self.pushButton_7.setToolTip(_translate("tenshi", "Add rectangles"))
        self.pushButton_8.setToolTip(_translate("tenshi", "Add arcs"))
        self.pushButton_9.setToolTip(_translate("tenshi", "Results"))
        self.show_supports.setToolTip(_translate("tenshi", "Visualize support reactions"))
        self.show_sec.setToolTip(_translate("tenshi", "Visualize cross section"))
        self.show_displacement.setToolTip(_translate("tenshi", "Visualize displacement"))
        self.show_moment.setToolTip(_translate("tenshi", "Visualize bending moment"))
        self.show_normal.setToolTip(_translate("tenshi", "Visualize normal force"))
        self.show_structure.setToolTip(_translate("tenshi", "Visualize structure"))
        self.show_shear.setToolTip(_translate("tenshi", "Visualize shear force"))
        self.label_41.setText(_translate("tenshi", "Drawings and Diagrams"))
        self.menuOp_es.setTitle(_translate("tenshi", "Options"))
        self.menuResetar.setTitle(_translate("tenshi", "Reset..."))
        self.menuFonte.setTitle(_translate("tenshi", "Font..."))
        self.menuSalvar_e_Carregar.setTitle(_translate("tenshi", "Save and Load"))
        self.menuGerar_Explica_es.setTitle(_translate("tenshi", "Generate Resolution"))
        self.save.setText(_translate("tenshi", "Save Structure"))
        self.load_button.setText(_translate("tenshi", "Load Structure"))
        self.actionComo_utilizar.setText(_translate("tenshi", "How to Use"))
        self.solvestatic.setText(_translate("tenshi", "Structure"))
        self.solveresist.setText(_translate("tenshi", "Cross Section"))
        self.resetloads.setText(_translate("tenshi", "Loads"))
        self.resetall.setText(_translate("tenshi", "Elements"))
        self.undo.setText(_translate("tenshi", "Previous Action"))
        self.undo.setShortcut(_translate("tenshi", "Ctrl+Z"))
        self.fontstructure.setText(_translate("tenshi", "Structure"))
        self.fontequations.setText(_translate("tenshi", "Equations"))
        self.translate_menu.setTitle(_translate("tenshi", "Translate..."))
        self.translate_pt.setText(_translate("tenshi", "Português"))
        self.translate_en.setText(_translate("tenshi", "English"))
        self.translate_nihongo.setText(_translate("tenshi", "日本語"))
        self.radio_plane.setText(_translate("tenshi", "Plane State"))
        self.radio_triple.setText(_translate("tenshi", "Triple State"))
        self.solvermohr.setText(_translate("tenshi", "Mohr's Circle"))
        self.load_structure_str = "Load Structure"
        self.strucutre_type_str = "Structure(*.pkl)"
        self.warning_str = "More information is required"
        self.warning_title = "Error"
        self.latex_error_str = "Please install Miktex to generate resolutions"
        self.font_size_str = "Font Size"
        self.font_strucuture_str = "Structure Font:"
        self.font_equations_str = "Equations Font:"
        self.rect_values_error = "Invalid Values. Values were likely inverted."
        self.show_mohr.setToolTip(_translate("tenshi", "Visualize Mohr's Circle"))
        self.int_plot.setText(_translate("tenshi", "Interactive Plot"))
        self.label_22.setText(_translate("tenshi", "Deadzone"))

    def beam(self):
        try:
            self.workaround()
            e = self.elementtype.currentIndex()

            if self.utilizeinfo.isChecked():
                EI = float(self.filter(self.beam_E.text())) * float(self.filter(self.beam_I.text()))
                EA = float(self.filter(self.beam_E.text())) * float(self.filter(self.beam_A.text()))
                element_types = ["beam", "truss"]
                self.ss.add_element(location=[[self.filter(self.beam_x1.text()), self.filter(self.beam_y1.text())],
                                          [self.filter(self.beam_x2.text()), self.filter(self.beam_y2.text())]],
                                    EI=EI, EA=EA, element_type=element_types[e])

            else:
                self.ss.add_element(location=[[self.filter(self.beam_x1.text()), self.filter(self.beam_y1.text())],
                                              [self.filter(self.beam_x2.text()), self.filter(self.beam_y2.text())]])

            self.visualize_structure()
            self.setupundo()
        except:
            self.warning()

    def beam_info(self):
        if self.utilizeinfo.isChecked():
            self.frame_4.setHidden(False)
        else:
            self.frame_4.setHidden(True)

    def element_type_list(self):
        if self.elementtype.currentIndex() == 1:
            self.beam_I.setEnabled(False)
        elif self.elementtype.currentIndex() == 0:
            self.beam_I.setEnabled(True)

    def node(self):
        try:
            self.workaround()
            self.ss.insert_node(element_id=int(self.node_id.text()), location=[self.filter(self.node_x.text()),
                                                                               self.filter(self.node_y.text())])
            self.visualize_structure()
            self.setupundo()
        except:
            self.warning()

    def support(self):
        try:
            self.workaround()
            if self.support_hinged.isChecked():
                self.ss.add_support_hinged(node_id=int(self.support_pos.text()))
            elif self.support_roll.isChecked():
                self.ss.add_support_roll(node_id=int(self.support_pos.text()),
                                         angle=float(self.filter(self.support_angle.text())))
            elif self.support_fixed.isChecked():
                self.ss.add_support_fixed(node_id=int(self.support_pos.text()))
            elif self.support_spring.isChecked():
                self.ss.add_support_spring(node_id=int(self.support_pos.text()), translation=self.spring_translation.text(), k=self.spring_k.text())

            self.visualize_structure()
            self.enable_buttons()
            self.setupundo()
        except:
            self.warning()

    def show_support_stuff(self):
        if self.support_roll.isChecked():
            self.support_angle.setHidden(False)
            self.label_27.setHidden(False)
            self.label_71.setHidden(True)
            self.label_73.setHidden(True)
            self.spring_k.setHidden(True)
            self.spring_translation.setHidden(True)
        elif self.support_spring.isChecked():
            self.label_71.setHidden(False)
            self.label_73.setHidden(False)
            self.spring_k.setHidden(False)
            self.spring_translation.setHidden(False)
            self.support_angle.setHidden(True)
            self.label_27.setHidden(True)
        else:
            self.support_angle.setHidden(True)
            self.label_27.setHidden(True)
            self.label_71.setHidden(True)
            self.label_73.setHidden(True)
            self.spring_k.setHidden(True)
            self.spring_translation.setHidden(True)

    def load(self):
        try:
            self.workaround()
            if self.load_moment.text() != '' and float(self.load_moment.text()) != 0:
                self.ss.moment_load(node_id=int(self.load_pos.text()), Ty=float(self.filter(self.load_moment.text())))

            if float(self.load_y.text()) == 0 and float(self.load_x.text()) == 0 and float(self.load_angle.text()) == 0:
                pass
            elif self.load_y.text() != '' and self.load_x.text() != '' and self.load_angle.text() != '':
                self.ss.point_load(node_id=int(self.load_pos.text()), Fy=float(self.filter(self.load_y.text())),
                                   Fx=float(self.filter(self.load_x.text())),
                                   rotation=float(self.filter(self.load_angle.text())))
            self.visualize_structure()
            self.enable_buttons()
            self.setupundo()
        except:
            self.warning()

    def qload(self):
        try:
            self.workaround()
            if self.qload_initial.text() == '':
                self.qload_final.setText(self.filter(self.qload_final.text()))
            if self.qload_final.text() == '':
                self.qload_final.setText(self.filter(self.qload_initial.text()))
            self.ss.q_load(element_id=int(self.qload_pos.text()), q=float(self.filter(self.qload_final.text())),
                           qi=float(self.filter(self.qload_initial.text())))
            self.visualize_structure()
            self.enable_buttons()
            self.setupundo()
        except:
            self.warning()

    def visualize_structure(self):
        if self.ss.element_map:
            self.visualize(self.ss.show_structure(show=False))
            self.last_figure = self.show_structure
        else:
            self.MplWidget.plot()
            self.figurefix()

    def visualize_supports(self):
        self.solve()
        self.visualize(self.ss.show_reaction_force(show=False))
        self.last_figure = self.show_supports

    def visualize_normal(self):
        self.solve()
        self.visualize(self.ss.show_axial_force(show=False))
        self.last_figure = self.show_normal

    def visualize_shear(self):
        self.solve()
        self.visualize(self.ss.show_shear_force(show=False))
        self.last_figure = self.show_shear

    def visualize_moment(self):
        self.solve()
        self.visualize(self.ss.show_bending_moment(show=False))
        self.last_figure = self.show_moment

    def visualize_displacement(self):
        self.solve()
        self.visualize(self.ss.show_displacement(show=False))
        self.last_figure = self.show_displacement

    def visualize_mohr(self, figure=None):
        if self.mohr.sx is not None:
            if not figure:
                figure = self.mohr.state(self.MplWidget.canvas.figure)
            self.visualize(figure)
            self.last_figure = self.show_mohr

    def visualize(self, figure=plt.figure()):
        self.MplWidget.plot(figure)
        self.figurefix()

    def solve(self):
        self.asworkaround()
        self.ss.solve()

    def static_solver(self):
        if find_executable('latex'):
            if self.show_moment.isEnabled():
                if self.translate_menu.title() == "Traduzir...":
                    file, ok = QFileDialog.getSaveFileName(self, "Gerar Resolução", "resolução", "PDF (*.pdf)")
                else:
                    file, ok = QFileDialog.getSaveFileName(self, "Generate Resolution", "resolution", "PDF (*.pdf)")
                if ok:
                    functions.eq.clear()
                    self.ss.show_structure(show=False)
                    savefig("Settings\\figs\\structure")
                    self.solve()
                    self.ss.show_reaction_force(show=False)
                    savefig("Settings\\figs\\supports")
                    self.ss.show_axial_force(show=False)
                    savefig("Settings\\figs\\axial")
                    self.ss.show_shear_force(show=False)
                    savefig("Settings\\figs\\shear")
                    self.ss.show_bending_moment(show=False)
                    savefig("Settings\\figs\\moment")
                    self.teach.solver(self.ss.supports_hinged, self.ss.supports_roll, self.ss.inclined_roll,
                                      self.ss.supports_fixed, self.ss.loads_moment, self.ss.loads_point, self.ss.loads_q,
                                      self.ss.loads_qi, self.ss.node_map)
                    os.replace("Settings\\resolucao.pdf", f"{file}")
        else:
            self.latex_warning()

    def mohr_solver(self):
        if self.mohr.sx is not None:
            self.mohr.solver()

    def rm_solver(self):
        if find_executable('latex'):
            if self.sig.sub_areas_cir or self.sig.sub_areas_rect:
                if self.translate_menu.title() == "Traduzir...":
                    file, ok = QFileDialog.getSaveFileName(self, "Gerar Resolução", "resolução", "PDF (*.pdf)")
                else:
                    file, ok = QFileDialog.getSaveFileName(self, "Generate Resolution", "resolution", "PDF (*.pdf)")
                if ok:
                    self.sig.solver()
                    os.replace("Settings\\resolucaorm.pdf", f"{file}")
        else:
            self.latex_warning()

    def reset(self):
        self.workaround()
        self.ss.remove_loads()
        self.visualize(self.ss.show_structure(show=False))
        self.setupundo()
        self.disable_buttons()

    def reset_all(self):
        with open(f'Settings\\blank.pkl', 'rb') as f:
            self.ss, self.sig = pickle.load(f)
        self.MplWidget.plot()
        self.figurefix()
        self.solvetrue = False
        self.setupundo()
        self.disable_buttons()

    def save_structure(self):
        if self.translate_menu.title() == "Traduzir...":
            file, ok = QFileDialog.getSaveFileName(self, "Salvar Estrutura", "Estrutura", "Estrutura (*.pkl)")
        else:
            file, ok = QFileDialog.getSaveFileName(self, "Save Structure", "Structure", "Structure (*.pkl)")
        if ok:
            with open(f'{file}', 'wb') as f:
                pickle.dump((self.ss, self.sig, self.mohr), f)

    def load_file(self):
        file, ok = QFileDialog.getOpenFileName(self, self.load_structure_str, "", self.strucutre_type_str)
        if ok:
            struct, cross, mohr = self.get_prompt_values()
            if struct:
                self.load_structure_aux(file)
            if cross:
                self.load_cross_section_aux(file)
            if mohr:
                self.load_mohr_aux(file)
            self.enable_buttons()
            self.setupundo()

    def load_structure_aux(self, file):
        with open(f'{file}', 'rb') as f:
            self.ss, _, _ = pickle.load(f)
        if self.ss.element_map:
            self.visualize(self.ss.show_structure(show=False))

    def load_cross_section_aux(self, file):
        with open(f'{file}', 'rb') as f:
            _, self.sig, _ = pickle.load(f)
        if self.sig.sub_areas_cir or self.sig.sub_areas_rect:
            self.rect_list.clear()
            self.circle_list.clear()
            for c in range(len(self.sig.sub_areas_rect)):
                self.add_rect_item()
            for c in range(len(self.sig.sub_areas_cir)):
                self.add_cir_item()
            self.finish_applying()

    def load_mohr_aux(self, file):
        with open(f'{file}', 'rb') as f:
            _, _, self.mohr = pickle.load(f)
        self.MplWidget.clear()
        self.visualize_mohr(self.mohr.state(self.MplWidget.canvas.figure))

    def warning(self):
        msg = QMessageBox()
        msg.setWindowTitle(self.warning_title)
        msg.setText(self.warning_str)
        msg.setIcon(QMessageBox.Warning)
        x = msg.exec_()

    def latex_warning(self):
        msg = QMessageBox()
        msg.setWindowTitle(self.warning_title)
        msg.setText(self.latex_error_str)
        msg.setIcon(QMessageBox.Warning)
        x = msg.exec_()

    def figurefix(self):
        x = self.MplWidget.size().width()
        y = self.MplWidget.size().height()
        self.MplWidget.resize(x + 1, y + 1)
        self.MplWidget.resize(x, y)

    def enable_buttons(self):
        if (len(self.ss.supports_roll) + len(self.ss.supports_hinged) + len(self.ss.supports_spring_x) +
            len(self.ss.supports_spring_z) + len(self.ss.supports_spring_y) >= 1 or len(self.ss.supports_fixed) >= 1) \
                and (len(self.ss.loads_point) or len(self.ss.loads_q) or len(self.ss.loads_moment)) >= 1:
            self.show_supports.setEnabled(True)
            self.show_normal.setEnabled(True)
            self.show_shear.setEnabled(True)
            self.show_moment.setEnabled(True)
            self.show_displacement.setEnabled(True)
        else:
            self.disable_buttons()

    def disable_buttons(self):
        self.show_supports.setEnabled(False)
        self.show_normal.setEnabled(False)
        self.show_shear.setEnabled(False)
        self.show_moment.setEnabled(False)
        self.show_displacement.setEnabled(False)

    def setupundo(self):
        self.undocounter += 1
        with open(f'Settings\\{f"undome{self.undocounter}"}.pkl', 'wb') as f:
            pickle.dump(self.ss, f) 

    def undo_previous(self):
        try:
            if self.last_figure != self.show_sec:
                if self.undocounter >= 1:
                    self.undocounter -= 1
                with open(f'Settings\\{f"undome{self.undocounter}"}.pkl', 'rb') as f:
                    self.ss = pickle.load(f)
                self.visualize(self.ss.show_structure(show=False))
                self.enable_buttons()
                os.remove(f"Settings\\undome{self.undocounter + 1}.pkl")
                if self.solvetrue == True:
                    self.solvetrue = False
        except:
            self.reset_all()

    def asworkaround(self):
        with open(f'Settings\\{"asworkaround"}.pkl', 'wb') as f:
            pickle.dump((self.ss, self.sig), f)
        self.solvetrue = True

    def workaround(self):
        if self.solvetrue:
            with open(f'Settings\\{"asworkaround"}.pkl', 'rb') as f:
                self.ss, self.sig = pickle.load(f)
            self.solvetrue = False

    def fontstruct(self):
        i = functions.size
        i, okPressed = QInputDialog.getInt(self, self.font_size_str, self.font_strucuture_str, i, 1, 100, 1)
        if okPressed:
            functions.size = i
            self.last_figure.click()

    def fonteq(self):
        i = functions.eqsize
        i, okPressed = QInputDialog.getInt(self, self.font_size_str, self.font_equations_str, i, 1, 100, 1)
        if okPressed:
            functions.eqsize = i
            self.last_figure.click()

    def get_sigma(self):
        self.sig.det_values()
        self.set_sigma()

    def set_sigma(self):
        self.msx.setText(f"{parse_expr(self.sig.My):.2f}")
        self.msy.setText(f"{parse_expr(self.sig.Mx):.2f}")
        self.mix.setText(f"{parse_expr(self.sig.Ix):.2f}")
        self.miy.setText(f"{parse_expr(self.sig.Iy):.2f}")
        self.at.setText(f"{parse_expr(self.sig.At):.2f}")
        self.qcg.setText(f"{self.sig.Qc/2:.2f}")

    def get_sigma_T(self):
        N = self.tnormal.text()
        At = self.at.text()
        My = self.tmy.text()
        Mx = self.tmz.text()
        Ix = self.mix.text()
        Iy = self.miy.text()
        if N != '' and At != '' and My != '' and Mx != '' and Ix != '' and Iy != '':
            self.tnresult.setText(f'{self.sig.det_normal_tension(N, At, My, Mx, Ix, Iy)[0]}')
            self.tneutral.setText(f'{self.sig.det_normal_tension(N, At, My, Mx, Ix, Iy)[1]:.2f}')
        else:
            self.warning()

    def get_cis(self):
        V = self.tshear.text()
        Q = self.qcg.text()
        if self.twidth.text() == '':
            self.twidth.setText('0')
        t = self.twidth.text()
        Ix = self.mix.text()
        if V != '' and Q != '' and t != '' and Ix != '':
            self.tfresult.setText(f"{self.sig.det_cis(V, Q, t, Ix)[0]:.2f}")
            self.tsresult.setText(f"{self.sig.det_cis(V, Q, t, Ix)[1]:.2f}")
        else:
            self.warning()

    def change_table_rect(self):
        c = self.rect_list.currentIndex()
        if self.sig.sub_areas_rect.get(c) is not None:
            self.rect_x1.setText(f"{self.sig.sub_areas_rect[c][0]}")
            self.rect_y1.setText(f"{self.sig.sub_areas_rect[c][1]}")
            self.rect_x2.setText(f"{self.sig.sub_areas_rect[c][2]}")
            self.rect_y2.setText(f"{self.sig.sub_areas_rect[c][3]}")
        else:
            self.clear_rect_text()
        if self.rect_visualize.isChecked():
            self.plot_sec()

    def change_table_circ(self):
        c = self.circle_list.currentIndex()
        if self.sig.sub_areas_cir.get(c) is not None:
            self.circle_x.setText(f"{self.sig.sub_areas_cir[c][0]}")
            self.circle_y.setText(f"{self.sig.sub_areas_cir[c][1]}")
            self.circle_r.setText(f"{self.sig.sub_areas_cir[c][2]}")
            self.circle_ai.setText(f"{self.sig.sub_areas_cir[c][3]}")
            self.circle_af.setText(f"{self.sig.sub_areas_cir[c][4]}")
        else:
            self.clear_cir_text()
        if self.circle_visualize.isChecked():
            self.plot_sec()

    def plot_sec(self):
        p = d = None
        if self.rect_visualize.isChecked():
            p = self.rect_list.currentIndex()
        if self.circle_visualize.isChecked():
            d = self.circle_list.currentIndex()
        if self.sig.sub_areas_cir or self.sig.sub_areas_rect:
            self.MplWidget.plot(self.sig.plot(p, d, self.MplWidget.canvas.figure))
            self.last_figure = self.show_sec
        else:
            self.MplWidget.plot()
        self.figurefix()
        savefig("Settings\\figs\\sectransv")

    def update_ret(self):
        if self.rect_x1.text() != '' and self.rect_y1.text() != '' and\
                self.rect_x2.text() != '' and self.rect_y2.text() != '':
            if float(self.rect_y1.text()) > float(self.rect_y2.text()) and float(self.rect_x2.text()) > float(self.rect_x1.text()):
                c = self.rect_list.currentIndex()
                self.sig.sub_areas_rect.update({c: [float(self.rect_x1.text()), float(self.rect_y1.text()),
                                                    float(self.rect_x2.text()), float(self.rect_y2.text())]})
                self.finish_applying()
            else:
                msg = QMessageBox()
                msg.setWindowTitle(self.warning_title)
                msg.setText(self.rect_values_error)
                msg.setIcon(QMessageBox.Warning)
                x = msg.exec_()

    def add_rect_item(self):
        c = len(self.rect_list)
        self.rect_list.addItem(f"Ret. {c + 1}")
        self.rect_list.setCurrentIndex(c)

    def update_cir(self):
        if self.circle_x.text() != '' and self.circle_y.text() != '' and \
                self.circle_r.text() != '' and self.circle_ai.text() != '': #and self.circle_af.text() != '':
            c = self.circle_list.currentIndex()
            self.sig.sub_areas_cir.update({c: [float(self.circle_x.text()), float(self.circle_y.text()),
                                               float(self.circle_r.text()), float(self.circle_ai.text())]})
                                               #self.circle_af.text()]})
            self.finish_applying()

    def add_cir_item(self):
        c = len(self.circle_list)
        self.circle_list.addItem(f"Cir. {c + 1}")
        self.circle_list.setCurrentIndex(c)

    def finish_applying(self):
        self.get_sigma()
        self.plot_sec()

    def remove_rectangle(self):
        c = self.rect_list.currentIndex()
        try:
            self.sig.sub_areas_rect.pop(c, None)
            self.get_sigma()
            self.plot_sec()
            self.change_table_rect()
        except:
            self.transv_reset()

    def remove_circle(self):
        c = self.circle_list.currentIndex()
        try:
            self.sig.sub_areas_cir.pop(c, None)
            self.get_sigma()
            self.plot_sec()
            self.change_table_circ()
        except:
            self.transv_reset()

    def transv_reset(self):
        self.sig.sub_areas_rect.clear()
        self.sig.sub_areas_cir.clear()
        self.clear_rect_text()
        self.clear_cir_text()
        self.at.clear()
        self.qcg.clear()
        self.mix.clear()
        self.miy.clear()
        self.msx.clear()
        self.msy.clear()
        self.tnormal.clear()
        self.tmy.clear()
        self.tmz.clear()
        self.tnresult.clear()
        self.tneutral.clear()
        self.tshear.clear()
        self.tcontact.clear()
        self.twidth.clear()
        self.tfos.clear()
        self.tsresult.clear()
        self.tfresult.clear()
        self.rect_visualize.setChecked(False)
        self.circle_visualize.setChecked(False)
        self.MplWidget.plot()
        self.figurefix()

    def clear_rect_text(self):
        self.rect_x1.clear()
        self.rect_y1.clear()
        self.rect_x2.clear()
        self.rect_y2.clear()

    def clear_cir_text(self):
        self.circle_x.clear()
        self.circle_y.clear()
        self.circle_r.clear()
        self.circle_ai.clear()
        self.circle_af.clear()

    def switch_states_plane(self):
        self.label_19.setHidden(True)
        self.label_20.setHidden(True)
        self.label_21.setHidden(True)
        self.sz.setHidden(True)
        self.txz.setHidden(True)
        self.tyz.setHidden(True)

    def switch_states_triple(self):
        self.label_19.setHidden(False)
        self.label_20.setHidden(False)
        self.label_21.setHidden(False)
        self.sz.setHidden(False)
        self.txz.setHidden(False)
        self.tyz.setHidden(False)

    def draw_mohr(self):
        if self.radio_plane.isChecked():
            self.mohr.triple = False
            self.MplWidget.clear()
            self.visualize_mohr(self.mohr.plain_state(float(self.sx.text()), float(self.sy.text()),
                                                               float(self.txy.text()), self.MplWidget.canvas.figure))

        elif self.radio_triple.isChecked():
            self.mohr.triple = True
            self.MplWidget.clear()
            self.visualize_mohr(self.mohr.triple_state(float(self.sx.text()), float(self.sy.text()),
                                                                float(self.sz.text()), float(self.txy.text()),
                                                                float(self.txz.text()), float(self.tyz.text()),
                                                                self.MplWidget.canvas.figure))

    def UI_font(self):
        font, ok = QtWidgets.QFontDialog.getFont()
        if ok:
            for name, obj in inspect.getmembers(self):
                if isinstance(obj, QtWidgets.QLabel):
                    obj.setFont(font)

    def fullscreen(self):
        self.MplWidget.showFullScreen()

    def filter(self, string):
        return string.replace(",", ".")

    def onclick(self, event):
        if self.int_plot.isChecked():
            if self.deadzone_x.text() == '':
                self.deadzone_x.setText('0')
            if self.deadzone_y.text() == '':
                self.deadzone_y.setText('0')
            px = int(self.deadzone_x.text())
            py = int(self.deadzone_y.text())
            if self.last_figure == self.show_mohr:
                if 'RIGHT' in str(event.button) and self.mohr.sz is not None:
                    self.MplWidget.clear()
                    self.visualize_mohr(self.mohr.triple_state(self.mohr.sx, self.mohr.sy, self.mohr.sz, self.mohr.txy,
                                                               self.mohr.txz, self.mohr.tyz, self.MplWidget.canvas.figure))
            elif self.stackedWidget.currentIndex() == 0:
                if 'LEFT' in str(event.button):
                    self.beam_x1.setText(str(round(event.xdata, px)))
                    self.beam_y1.setText(str(round(event.ydata, py)))
                elif 'RIGHT' in str(event.button):
                    self.beam_x2.setText(str(round(event.xdata, px)))
                    self.beam_y2.setText(str(round(event.ydata, py)))
            elif self.stackedWidget.currentIndex() == 1:
                if 'LEFT' in str(event.button):
                    self.node_x.setText(str(round(event.xdata, px)))
                    self.node_y.setText(str(round(event.ydata, py)))
                elif 'RIGHT' in str(event.button):
                    id_, _, _, _, _, _ = self.teach.fetcher(str(self.ss.node_map.get(keys)))
                    self.node_id.setText(str(id_.group(1)))
            elif self.stackedWidget.currentIndex() == 2:
                for keys, values in self.ss.node_map.items():
                    id_, x, y, _, _, _ = self.teach.fetcher(str(self.ss.node_map.get(keys)))
                    if round(event.xdata, px) == round(float(x.group(1)), px) and round(event.ydata, py) == round(float(y.group(1)), py):
                        self.support_pos.setText(str(id_.group(1)))
            elif self.stackedWidget.currentIndex() == 3:
                for keys, values in self.ss.node_map.items():
                    id_, x, y, _, _, _ = self.teach.fetcher(str(self.ss.node_map.get(keys)))
                    if round(event.xdata, px) == round(float(x.group(1)), px) and round(event.ydata, py) == round(float(y.group(1)), py):
                        self.load_pos.setText(str(id_.group(1)))
            elif self.stackedWidget.currentIndex() == 4:
                for keys, values in self.ss.node_map.items():
                    id_, x, y, _, _, _ = self.teach.fetcher(str(self.ss.node_map.get(keys)))
                    if round(event.xdata, px) == round(float(x.group(1)), px) and round(event.ydata, py) == round(float(y.group(1)), py):
                        self.qload_pos.setText(str(id_.group(1)))
            elif self.stackedWidget.currentIndex() == 5:
                if 'LEFT' in str(event.button):
                    self.rect_x1.setText(str(round(event.xdata, px)))
                    self.rect_y1.setText(str(round(event.ydata, py)))
                elif 'RIGHT' in str(event.button):
                    self.rect_x2.setText(str(round(event.xdata, px)))
                    self.rect_y2.setText(str(round(event.ydata, py)))

    def on_release(self, event):
        if self.int_plot.isChecked():
            if self.last_figure == self.show_mohr and 'RIGHT' not in str(event.button) and self.mohr.sz is not None:
                self.visualize_mohr(self.mohr.on_release(self.MplWidget.canvas.figure))

    def get_prompt_values(self):
        prompt = loadprompt.Ui_load_prompt()
        load_prompt = QtWidgets.QDialog()
        prompt.setupUi(load_prompt)
        load_prompt.exec_()
        return prompt.struct, prompt.cross, prompt.mohr

    def listener(self):
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Figures/mic_red.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.push_to_talk.setIcon(icon)
        self.push_to_talk.repaint()
        audio = sr.Secretary().speech_recognition()
        if audio is not None:
            if audio == 'aplicar' or audio == 'apply':
                self.beam_apply.click()
            else:
                a, b = audio
                print(a, b)
                if a is not None and b is not None:
                    if str(a) == 'X1':
                        self.beam_x1.setText(str(b))
                    elif str(a) == 'Y1':
                        self.beam_y1.setText(str(b))
                    elif str(a) == r'X2':
                        self.beam_x2.setText(str(b))
                    elif str(a) == 'Y2':
                        self.beam_y2.setText(str(b))
        icon.addPixmap(QtGui.QPixmap(":/Figures/mic_white.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.push_to_talk.setIcon(icon)
        self.push_to_talk.repaint()

if __name__ == "__main__":
    import sys
    os.environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
    app = QtWidgets.QApplication(sys.argv)
    app.setAttribute(QtCore.Qt.AA_EnableHighDpiScaling)
    tenshi = QtWidgets.QMainWindow()
    ui = Ui_tenshi()
    ui.setupUi(tenshi)
    tenshi.show()
    sys.exit(app.exec_())
